package com.mycompany.bibliotech.telas;

import com.mycompany.bibliotech.dao.AutorDAO;
import com.mycompany.bibliotech.dao.AvaliacaoDAO;
import com.mycompany.bibliotech.dao.LivroCategoriaDAO;
import com.mycompany.bibliotech.dao.LivroDAO;
import com.mycompany.bibliotech.dao.ImagemDAO;
import com.mycompany.bibliotech.dao.UsuarioCadastroDAO;
import com.mycompany.bibliotech.model.bean.Autor;
import com.mycompany.bibliotech.model.bean.Avaliacao;
import com.mycompany.bibliotech.model.bean.Livro;
import com.mycompany.bibliotech.model.bean.ValidadorIsbn;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.Timer;

public class EdicaoDeLivro extends javax.swing.JFrame {

    public EdicaoDeLivro() {
        initComponents();
        listarCategorias();
        listarIdiomasDoLivro();
        listarNacionalidades();
        sexoAutor();
        formatedIsbn.setEditable(false);
        LivroDAO.selectGeralLivroTitulo(cboxLivroAvaliacao);
    }

    private void visualizadorDeImagem() {
        ImagemDAO minhaImagemDao = new ImagemDAO();

        int idLivro = 0;

        if (!txtIdLivro.getText().isEmpty()) {
            idLivro = Integer.parseInt(txtIdLivro.getText());
        }

        if (idLivro != 0) {
            byte[] bytesImagem = minhaImagemDao.buscarImagemPorId(idLivro);
            exibirImagem(bytesImagem);
        }
    }

    private void exibirImagem(byte[] bytesImagem) {
        if (bytesImagem != null && bytesImagem.length > 0) {
            try {
                // Converte o array de bytes para uma imagem
                ByteArrayInputStream bis = new ByteArrayInputStream(bytesImagem);
                BufferedImage bImage = ImageIO.read(bis);

                ImageIcon icone = new ImageIcon(bImage);
                // Define a imagem na JLabel
                jlbImagemCapaLivro.setIcon(icone);

            } catch (IOException e) {
                Logger.getLogger(EdicaoDeLivro.class.getName()).log(Level.SEVERE, null, e);
            }
        } else {
            // Se os bytes da imagem forem nulos, limpa a JLabel ou define uma imagem padrão
            jlbImagemCapaLivro.setIcon(null);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        janelaDeAbas = new javax.swing.JTabbedPane();
        jpnLivro = new javax.swing.JPanel();
        btnPesquisaLivro = new javax.swing.JButton();
        txtNomeDaEditora = new javax.swing.JTextField();
        cboxIsbnSelect = new javax.swing.JComboBox<>();
        btnMostraTodosLivro = new javax.swing.JButton();
        btnLimparTelaLivro = new javax.swing.JButton();
        txtTituloLivro = new javax.swing.JTextField();
        txtIdLivro = new javax.swing.JTextField();
        txtDeBoasVindasLivro = new javax.swing.JTextField();
        cboxCategoriaLivro = new javax.swing.JComboBox<>();
        btnSalvarAlteracoesLivro = new javax.swing.JButton();
        formatedIsbn = new javax.swing.JFormattedTextField();
        cboxLivroIdioma = new javax.swing.JComboBox<>();
        cboxSubCategoriaLivro = new javax.swing.JComboBox<>();
        jlbImagemCapaLivro = new javax.swing.JLabel();
        txtNumeroDePaginas = new javax.swing.JTextField();
        btnBuscarImagem = new javax.swing.JButton();
        boxSinopse = new javax.swing.JScrollPane();
        txtSinopseDoLivro = new javax.swing.JTextArea();
        btnExcluirImagem = new javax.swing.JButton();
        txtBuscaLivro = new javax.swing.JTextField();
        btnTelaPrinAbaLivro = new javax.swing.JButton();
        cboxResultadoPesquisaLivro = new javax.swing.JComboBox<>();
        txtAnoDePublicacao = new javax.swing.JTextField();
        jpnAutor = new javax.swing.JPanel();
        txtIdAutor = new javax.swing.JTextField();
        txtNomeAutor = new javax.swing.JTextField();
        cboxNacionalidadeAutor = new javax.swing.JComboBox<>();
        cboxSexoAutor = new javax.swing.JComboBox<>();
        txtBuscaAutor = new javax.swing.JTextField();
        cboxResultadoPesquisaAutor = new javax.swing.JComboBox<>();
        btnMostrarTodosAutor = new javax.swing.JButton();
        btnPesquisarAutor = new javax.swing.JButton();
        txtDeBoasVindasAutor = new javax.swing.JTextField();
        btnTelaPrinAbaAutor = new javax.swing.JButton();
        btnLimparTelaAutor = new javax.swing.JButton();
        btnSalvarAlteracoesAutor = new javax.swing.JButton();
        jpnAvaliacao = new javax.swing.JPanel();
        panComentarioAvaliacao = new javax.swing.JScrollPane();
        txtComentarioAvaliacao = new javax.swing.JTextArea();
        txtDataAvaliacao = new javax.swing.JTextField();
        txtDeBoasVindasAvaliacao = new javax.swing.JTextField();
        cboxUsuarioAvaliacao = new javax.swing.JComboBox<>();
        cboxNotaAvaliacao = new javax.swing.JComboBox<>();
        btnTelaPrinAbaAvaliacao = new javax.swing.JButton();
        btnLimparTelaAvaliacao = new javax.swing.JButton();
        btnSalvarAlteracoesAvaliacao = new javax.swing.JButton();
        cboxLivroAvaliacao = new javax.swing.JComboBox<>();
        btnAvaliacaoFiltroAtualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        janelaDeAbas.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N

        jpnLivro.setBackground(new java.awt.Color(255, 255, 255));
        jpnLivro.setPreferredSize(new java.awt.Dimension(1280, 720));

        btnPesquisaLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnPesquisaLivro.setText("Pesquisar");
        btnPesquisaLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaLivroActionPerformed(evt);
            }
        });

        txtNomeDaEditora.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtNomeDaEditora.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nome da Editora", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        txtNomeDaEditora.setEnabled(false);

        cboxIsbnSelect.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        cboxIsbnSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "ISBN-13", "ISBN-10" }));
        cboxIsbnSelect.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tipo *", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        cboxIsbnSelect.setEnabled(false);
        cboxIsbnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxIsbnSelectActionPerformed(evt);
            }
        });

        btnMostraTodosLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnMostraTodosLivro.setText("Mostrar Todos");
        btnMostraTodosLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostraTodosLivroActionPerformed(evt);
            }
        });

        btnLimparTelaLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnLimparTelaLivro.setText("Limpar");
        btnLimparTelaLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparTelaLivroActionPerformed(evt);
            }
        });

        txtTituloLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtTituloLivro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Título *", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        txtTituloLivro.setEnabled(false);
        txtTituloLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTituloLivroActionPerformed(evt);
            }
        });

        txtIdLivro.setEditable(false);
        txtIdLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtIdLivro.setBorder(javax.swing.BorderFactory.createTitledBorder("ID"));
        txtIdLivro.setFocusable(false);

        txtDeBoasVindasLivro.setEditable(false);
        txtDeBoasVindasLivro.setBackground(new java.awt.Color(255, 255, 255));
        txtDeBoasVindasLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtDeBoasVindasLivro.setText("Os campo com asterisco são de preenchimento obrigatório.");
        txtDeBoasVindasLivro.setBorder(null);
        txtDeBoasVindasLivro.setFocusable(false);
        txtDeBoasVindasLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeBoasVindasLivroActionPerformed(evt);
            }
        });

        cboxCategoriaLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        cboxCategoriaLivro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não Informada" }));
        cboxCategoriaLivro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Categoria *", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        cboxCategoriaLivro.setEnabled(false);
        cboxCategoriaLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxCategoriaLivroActionPerformed(evt);
            }
        });

        btnSalvarAlteracoesLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnSalvarAlteracoesLivro.setText("Salvar Alterações");
        btnSalvarAlteracoesLivro.setEnabled(false);
        btnSalvarAlteracoesLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarAlteracoesLivroActionPerformed(evt);
            }
        });

        formatedIsbn.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ISBN *", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        try {
            formatedIsbn.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        formatedIsbn.setEnabled(false);
        formatedIsbn.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        formatedIsbn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formatedIsbnActionPerformed(evt);
            }
        });

        cboxLivroIdioma.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        cboxLivroIdioma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não Informado" }));
        cboxLivroIdioma.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Idioma *", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        cboxLivroIdioma.setEnabled(false);

        cboxSubCategoriaLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        cboxSubCategoriaLivro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não Informada" }));
        cboxSubCategoriaLivro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sub-categoria *", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        cboxSubCategoriaLivro.setEnabled(false);
        cboxSubCategoriaLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxSubCategoriaLivroActionPerformed(evt);
            }
        });

        jlbImagemCapaLivro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jlbImagemCapaLivro.setEnabled(false);

        txtNumeroDePaginas.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtNumeroDePaginas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Número de Páginas *", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        txtNumeroDePaginas.setEnabled(false);
        txtNumeroDePaginas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroDePaginasActionPerformed(evt);
            }
        });
        txtNumeroDePaginas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroDePaginasKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroDePaginasKeyTyped(evt);
            }
        });

        btnBuscarImagem.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnBuscarImagem.setText("Buscar");
        btnBuscarImagem.setEnabled(false);
        btnBuscarImagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarImagemActionPerformed(evt);
            }
        });

        boxSinopse.setBackground(new java.awt.Color(255, 255, 255));
        boxSinopse.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sinopse do Livro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N

        txtSinopseDoLivro.setColumns(20);
        txtSinopseDoLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtSinopseDoLivro.setLineWrap(true);
        txtSinopseDoLivro.setRows(5);
        txtSinopseDoLivro.setEnabled(false);
        boxSinopse.setViewportView(txtSinopseDoLivro);

        btnExcluirImagem.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnExcluirImagem.setText("Excluir");
        btnExcluirImagem.setEnabled(false);
        btnExcluirImagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirImagemActionPerformed(evt);
            }
        });

        txtBuscaLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtBuscaLivro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar Livro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N

        btnTelaPrinAbaLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnTelaPrinAbaLivro.setText("Tela Principal");
        btnTelaPrinAbaLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTelaPrinAbaLivroActionPerformed(evt);
            }
        });

        cboxResultadoPesquisaLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        cboxResultadoPesquisaLivro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Resultado da Busca", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        cboxResultadoPesquisaLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxResultadoPesquisaLivroActionPerformed(evt);
            }
        });

        txtAnoDePublicacao.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtAnoDePublicacao.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ano de Publicação *", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        txtAnoDePublicacao.setEnabled(false);
        txtAnoDePublicacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAnoDePublicacaoActionPerformed(evt);
            }
        });
        txtAnoDePublicacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAnoDePublicacaoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAnoDePublicacaoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jpnLivroLayout = new javax.swing.GroupLayout(jpnLivro);
        jpnLivro.setLayout(jpnLivroLayout);
        jpnLivroLayout.setHorizontalGroup(
            jpnLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnLivroLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jpnLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnLivroLayout.createSequentialGroup()
                        .addComponent(txtDeBoasVindasLivro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jpnLivroLayout.createSequentialGroup()
                        .addGroup(jpnLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboxResultadoPesquisaLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpnLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jpnLivroLayout.createSequentialGroup()
                                    .addComponent(btnMostraTodosLivro)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnPesquisaLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtBuscaLivro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnTelaPrinAbaLivro))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addGroup(jpnLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(boxSinopse, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpnLivroLayout.createSequentialGroup()
                                .addGroup(jpnLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNomeDaEditora, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboxLivroIdioma, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jpnLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpnLivroLayout.createSequentialGroup()
                                            .addComponent(txtIdLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtTituloLivro))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpnLivroLayout.createSequentialGroup()
                                            .addGroup(jpnLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(cboxIsbnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtAnoDePublicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(cboxCategoriaLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(18, 18, 18)
                                            .addGroup(jpnLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(formatedIsbn, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtNumeroDePaginas, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(cboxSubCategoriaLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(18, 18, 18)
                                .addComponent(jlbImagemCapaLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpnLivroLayout.createSequentialGroup()
                                .addComponent(btnLimparTelaLivro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSalvarAlteracoesLivro)))
                        .addGap(18, 18, 18)
                        .addGroup(jpnLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscarImagem)
                            .addComponent(btnExcluirImagem))
                        .addGap(43, 43, 43))))
        );
        jpnLivroLayout.setVerticalGroup(
            jpnLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnLivroLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(txtDeBoasVindasLivro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnLivroLayout.createSequentialGroup()
                        .addGroup(jpnLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTituloLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtIdLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpnLivroLayout.createSequentialGroup()
                                .addComponent(btnBuscarImagem)
                                .addGap(18, 18, 18)
                                .addComponent(btnExcluirImagem))
                            .addGroup(jpnLivroLayout.createSequentialGroup()
                                .addGroup(jpnLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jlbImagemCapaLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jpnLivroLayout.createSequentialGroup()
                                        .addGroup(jpnLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(cboxIsbnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(formatedIsbn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jpnLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtAnoDePublicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtNumeroDePaginas, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cboxResultadoPesquisaLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jpnLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(cboxCategoriaLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cboxSubCategoriaLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(txtNomeDaEditora, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cboxLivroIdioma, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(boxSinopse, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jpnLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLimparTelaLivro)
                            .addComponent(btnSalvarAlteracoesLivro))
                        .addContainerGap(26, Short.MAX_VALUE))
                    .addGroup(jpnLivroLayout.createSequentialGroup()
                        .addComponent(txtBuscaLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jpnLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnPesquisaLivro)
                            .addComponent(btnMostraTodosLivro))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTelaPrinAbaLivro)
                        .addGap(17, 17, 17))))
        );

        janelaDeAbas.addTab("Livro", jpnLivro);

        jpnAutor.setBackground(new java.awt.Color(255, 255, 255));

        txtIdAutor.setEditable(false);
        txtIdAutor.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtIdAutor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        txtIdAutor.setEnabled(false);
        txtIdAutor.setFocusable(false);

        txtNomeAutor.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtNomeAutor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nome *", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        txtNomeAutor.setEnabled(false);

        cboxNacionalidadeAutor.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        cboxNacionalidadeAutor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nacionalidade", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        cboxNacionalidadeAutor.setEnabled(false);

        cboxSexoAutor.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        cboxSexoAutor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sexo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        cboxSexoAutor.setEnabled(false);

        txtBuscaAutor.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtBuscaAutor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar Autor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        txtBuscaAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscaAutorActionPerformed(evt);
            }
        });

        cboxResultadoPesquisaAutor.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        cboxResultadoPesquisaAutor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Resultado da Busca", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        cboxResultadoPesquisaAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxResultadoPesquisaAutorActionPerformed(evt);
            }
        });

        btnMostrarTodosAutor.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnMostrarTodosAutor.setText("Mostrar Todos");
        btnMostrarTodosAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarTodosAutorActionPerformed(evt);
            }
        });

        btnPesquisarAutor.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnPesquisarAutor.setText("Pesquisar");
        btnPesquisarAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarAutorActionPerformed(evt);
            }
        });

        txtDeBoasVindasAutor.setEditable(false);
        txtDeBoasVindasAutor.setBackground(new java.awt.Color(255, 255, 255));
        txtDeBoasVindasAutor.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtDeBoasVindasAutor.setText("Os campo com asterisco são de preenchimento obrigatório.");
        txtDeBoasVindasAutor.setBorder(null);
        txtDeBoasVindasAutor.setFocusable(false);
        txtDeBoasVindasAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeBoasVindasAutorActionPerformed(evt);
            }
        });

        btnTelaPrinAbaAutor.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnTelaPrinAbaAutor.setText("Tela Principal");
        btnTelaPrinAbaAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTelaPrinAbaAutorActionPerformed(evt);
            }
        });

        btnLimparTelaAutor.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnLimparTelaAutor.setText("Limpar");
        btnLimparTelaAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparTelaAutorActionPerformed(evt);
            }
        });

        btnSalvarAlteracoesAutor.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnSalvarAlteracoesAutor.setText("Salvar Alterações");
        btnSalvarAlteracoesAutor.setEnabled(false);
        btnSalvarAlteracoesAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarAlteracoesAutorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnAutorLayout = new javax.swing.GroupLayout(jpnAutor);
        jpnAutor.setLayout(jpnAutorLayout);
        jpnAutorLayout.setHorizontalGroup(
            jpnAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnAutorLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jpnAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnAutorLayout.createSequentialGroup()
                        .addComponent(txtDeBoasVindasAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jpnAutorLayout.createSequentialGroup()
                        .addGroup(jpnAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cboxResultadoPesquisaAutor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpnAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jpnAutorLayout.createSequentialGroup()
                                    .addComponent(btnMostrarTodosAutor)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnPesquisarAutor))
                                .addComponent(txtBuscaAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnTelaPrinAbaAutor, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(56, 56, 56)
                        .addGroup(jpnAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboxSexoAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpnAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpnAutorLayout.createSequentialGroup()
                                    .addComponent(btnLimparTelaAutor)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSalvarAlteracoesAutor))
                                .addGroup(jpnAutorLayout.createSequentialGroup()
                                    .addComponent(txtIdAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtNomeAutor))
                                .addComponent(cboxNacionalidadeAutor, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(401, Short.MAX_VALUE))))
        );
        jpnAutorLayout.setVerticalGroup(
            jpnAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnAutorLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(txtDeBoasVindasAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpnAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnAutorLayout.createSequentialGroup()
                        .addComponent(txtBuscaAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jpnAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnMostrarTodosAutor)
                            .addComponent(btnPesquisarAutor)))
                    .addGroup(jpnAutorLayout.createSequentialGroup()
                        .addGroup(jpnAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtIdAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNomeAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(cboxNacionalidadeAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jpnAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboxSexoAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboxResultadoPesquisaAutor, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jpnAutorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimparTelaAutor)
                    .addComponent(btnSalvarAlteracoesAutor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 389, Short.MAX_VALUE)
                .addComponent(btnTelaPrinAbaAutor)
                .addGap(17, 17, 17))
        );

        janelaDeAbas.addTab("Autor", jpnAutor);

        jpnAvaliacao.setBackground(new java.awt.Color(255, 255, 255));

        txtComentarioAvaliacao.setColumns(20);
        txtComentarioAvaliacao.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtComentarioAvaliacao.setLineWrap(true);
        txtComentarioAvaliacao.setRows(5);
        txtComentarioAvaliacao.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Comentário", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        txtComentarioAvaliacao.setEnabled(false);
        panComentarioAvaliacao.setViewportView(txtComentarioAvaliacao);

        txtDataAvaliacao.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtDataAvaliacao.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data da Avaliação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        txtDataAvaliacao.setEnabled(false);

        txtDeBoasVindasAvaliacao.setEditable(false);
        txtDeBoasVindasAvaliacao.setBackground(new java.awt.Color(255, 255, 255));
        txtDeBoasVindasAvaliacao.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtDeBoasVindasAvaliacao.setText("Os campo com asterisco são de preenchimento obrigatório.");
        txtDeBoasVindasAvaliacao.setBorder(null);
        txtDeBoasVindasAvaliacao.setFocusable(false);
        txtDeBoasVindasAvaliacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeBoasVindasAvaliacaoActionPerformed(evt);
            }
        });

        cboxUsuarioAvaliacao.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        cboxUsuarioAvaliacao.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Usuário Que Avaliou", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        cboxUsuarioAvaliacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxUsuarioAvaliacaoActionPerformed(evt);
            }
        });

        cboxNotaAvaliacao.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        cboxNotaAvaliacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não Informada", "10 - Excelente", "9 - Ótimo", "8 - Muito Bom", "7 - Bom", "6 - Satisfatório", "5 - Regular", "4 - Abaixo da Média", "3 - Ruim", "2 - Muito Ruim", "1 - Péssimo", "0 - Inaceitável" }));
        cboxNotaAvaliacao.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Avaliação", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        cboxNotaAvaliacao.setEnabled(false);

        btnTelaPrinAbaAvaliacao.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnTelaPrinAbaAvaliacao.setText("Tela Principal");
        btnTelaPrinAbaAvaliacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTelaPrinAbaAvaliacaoActionPerformed(evt);
            }
        });

        btnLimparTelaAvaliacao.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnLimparTelaAvaliacao.setText("Limpar");
        btnLimparTelaAvaliacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparTelaAvaliacaoActionPerformed(evt);
            }
        });

        btnSalvarAlteracoesAvaliacao.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnSalvarAlteracoesAvaliacao.setText("Salvar Alterações");
        btnSalvarAlteracoesAvaliacao.setEnabled(false);
        btnSalvarAlteracoesAvaliacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarAlteracoesAvaliacaoActionPerformed(evt);
            }
        });

        cboxLivroAvaliacao.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        cboxLivroAvaliacao.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Livro Avaliado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        cboxLivroAvaliacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxLivroAvaliacaoActionPerformed(evt);
            }
        });

        btnAvaliacaoFiltroAtualizar.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnAvaliacaoFiltroAtualizar.setText("Atualizar");
        btnAvaliacaoFiltroAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvaliacaoFiltroAtualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnAvaliacaoLayout = new javax.swing.GroupLayout(jpnAvaliacao);
        jpnAvaliacao.setLayout(jpnAvaliacaoLayout);
        jpnAvaliacaoLayout.setHorizontalGroup(
            jpnAvaliacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnAvaliacaoLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jpnAvaliacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTelaPrinAbaAvaliacao)
                    .addGroup(jpnAvaliacaoLayout.createSequentialGroup()
                        .addGroup(jpnAvaliacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDeBoasVindasAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jpnAvaliacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cboxUsuarioAvaliacao, 0, 390, Short.MAX_VALUE)
                                .addComponent(cboxLivroAvaliacao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(btnAvaliacaoFiltroAtualizar, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(56, 56, 56)
                        .addGroup(jpnAvaliacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpnAvaliacaoLayout.createSequentialGroup()
                                .addComponent(btnLimparTelaAvaliacao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSalvarAlteracoesAvaliacao))
                            .addComponent(panComentarioAvaliacao, javax.swing.GroupLayout.DEFAULT_SIZE, 390, Short.MAX_VALUE)
                            .addComponent(cboxNotaAvaliacao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDataAvaliacao))))
                .addContainerGap(401, Short.MAX_VALUE))
        );
        jpnAvaliacaoLayout.setVerticalGroup(
            jpnAvaliacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnAvaliacaoLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(txtDeBoasVindasAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jpnAvaliacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnAvaliacaoLayout.createSequentialGroup()
                        .addComponent(txtDataAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cboxNotaAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpnAvaliacaoLayout.createSequentialGroup()
                        .addComponent(cboxLivroAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cboxUsuarioAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jpnAvaliacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnAvaliacaoLayout.createSequentialGroup()
                        .addComponent(btnAvaliacaoFiltroAtualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTelaPrinAbaAvaliacao)
                        .addGap(17, 17, 17))
                    .addGroup(jpnAvaliacaoLayout.createSequentialGroup()
                        .addComponent(panComentarioAvaliacao, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jpnAvaliacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLimparTelaAvaliacao)
                            .addComponent(btnSalvarAlteracoesAvaliacao))
                        .addContainerGap(310, Short.MAX_VALUE))))
        );

        janelaDeAbas.addTab("Avaliação", jpnAvaliacao);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(janelaDeAbas, javax.swing.GroupLayout.DEFAULT_SIZE, 1268, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(janelaDeAbas, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtAnoDePublicacaoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAnoDePublicacaoKeyTyped
        // Impede que texto seja digitado no campo.
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtAnoDePublicacaoKeyTyped

    private void txtAnoDePublicacaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAnoDePublicacaoKeyPressed
        String anoDePublicacao = txtAnoDePublicacao.getText();
        int tamanho = anoDePublicacao.length();
        char c = evt.getKeyChar();
        int keyCode = evt.getExtendedKeyCode();

        // Permite usar teclas como "Back Space" e "Delete" para corrigir algum erro.
        if (keyCode == KeyEvent.VK_BACK_SPACE || keyCode == KeyEvent.VK_DELETE) {
            txtAnoDePublicacao.setEditable(true);
        } else if (!Character.isDigit(c)) {
            evt.consume(); // Se não for um número, impede a entrada.
        } else {
            if (tamanho >= 4) {
                txtAnoDePublicacao.setEditable(false); // Desabilita a edição.
                Timer timer = new Timer(500, e -> {
                    txtAnoDePublicacao.setEditable(true); // Habilita novamente após 500ms.
                    ((Timer) e.getSource()).stop(); // Para o timer após a execução.
                });
                timer.setRepeats(false);
                timer.start();
            } else {
                txtAnoDePublicacao.setEditable(true); // Permite a edição se ainda não atingiu o limite
            }
        }
    }//GEN-LAST:event_txtAnoDePublicacaoKeyPressed

    private void txtAnoDePublicacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAnoDePublicacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAnoDePublicacaoActionPerformed

    private void btnTelaPrinAbaLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTelaPrinAbaLivroActionPerformed
        new TelaPrincipalAdministrador().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnTelaPrinAbaLivroActionPerformed

    private void btnExcluirImagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirImagemActionPerformed

        ImageIcon icon = (ImageIcon) jlbImagemCapaLivro.getIcon();

        if (icon == null || icon.getImage() == null) {
            JOptionPane.showMessageDialog(null, "Não existe imagem de capa nesse livro");
        } else {
            int confirmacao = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir a imagem?", "Confirmação", JOptionPane.YES_NO_OPTION);
            if (confirmacao == JOptionPane.YES_OPTION) {
                jlbImagemCapaLivro.setIcon(null);
            }
        }
    }//GEN-LAST:event_btnExcluirImagemActionPerformed

    private void btnBuscarImagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarImagemActionPerformed
        JFileChooser seletorDeImagem = new JFileChooser();
        int resultado = seletorDeImagem.showOpenDialog(null);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File arquivo = seletorDeImagem.getSelectedFile();
            String caminho = arquivo.getAbsolutePath();
            try {
                // Para redimensionar a imagem.
                BufferedImage redimensionar = ImageIO.read(new File(caminho));
                // O tamanho da imagem.
                Image imagem = redimensionar.getScaledInstance(250, 350, Image.SCALE_SMOOTH);
                ImageIcon icone = new ImageIcon(imagem);
                jlbImagemCapaLivro.setIcon(icone);
            } catch (IOException ex) {
                Logger.getLogger(EdicaoDeLivro.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            System.out.println("Nenhuma imagem foi selecionada.");
        }
    }//GEN-LAST:event_btnBuscarImagemActionPerformed

    private void txtNumeroDePaginasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroDePaginasKeyTyped
        // Impede que texto seja digitado no campo.
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNumeroDePaginasKeyTyped

    private void txtNumeroDePaginasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroDePaginasKeyPressed
        String anoDePublicacao = txtNumeroDePaginas.getText();
        int tamanho = anoDePublicacao.length();
        char c = evt.getKeyChar();
        int keyCode = evt.getExtendedKeyCode();

        // Permite usar teclas como "Back Space" e "Delete" para corrigir algum erro.
        if (keyCode == KeyEvent.VK_BACK_SPACE || keyCode == KeyEvent.VK_DELETE) {
            txtNumeroDePaginas.setEditable(true);
        } else if (!Character.isDigit(c)) {
            evt.consume(); // Se não for um número, impede a entrada.
        } else {
            if (tamanho >= 4) {
                txtNumeroDePaginas.setEditable(false); // Desabilita a edição.
                Timer timer = new Timer(500, e -> {
                    txtNumeroDePaginas.setEditable(true); // Habilita novamente após 500ms.
                    ((Timer) e.getSource()).stop(); // Para o timer após a execução.
                });
                timer.setRepeats(false);
                timer.start();
            } else {
                txtNumeroDePaginas.setEditable(true); // Permite a edição se ainda não atingiu o limite
            }
        }
    }//GEN-LAST:event_txtNumeroDePaginasKeyPressed

    private void txtNumeroDePaginasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroDePaginasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroDePaginasActionPerformed

    private void cboxSubCategoriaLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxSubCategoriaLivroActionPerformed

    }//GEN-LAST:event_cboxSubCategoriaLivroActionPerformed

    private void formatedIsbnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formatedIsbnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formatedIsbnActionPerformed

    private void btnSalvarAlteracoesLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarAlteracoesLivroActionPerformed
        Livro livro = new Livro();
        LivroDAO livroDao = new LivroDAO();
        ImagemDAO imagemDAO = new ImagemDAO();

        int idLivro = Integer.parseInt(txtIdLivro.getText());

        // Seta os dados caso nenhum erro seja encontrado ou mostra o erro na tela.
        if (verificaErroCadastro() != null) {
            JOptionPane.showMessageDialog(null, verificaErroCadastro());
        } else {
            livro.setTitulo(txtTituloLivro.getText());
            livro.setIsbn(formatedIsbn.getText());
            livro.setAnoDePublicacao(Integer.parseInt(txtAnoDePublicacao.getText()));
            livro.setNumeroDePaginas(Integer.parseInt(txtNumeroDePaginas.getText()));
            livro.setCategoria(cboxCategoriaLivro.getSelectedItem().toString());
            livro.setSubCategoria(cboxSubCategoriaLivro.getSelectedItem().toString());
            livro.setEditora(txtNomeDaEditora.getText());
            livro.setIdioma(cboxLivroIdioma.getSelectedItem().toString());
            livro.setSinopse(txtSinopseDoLivro.getText());

            livroDao.atualizaInfoLivro(idLivro, livro);

            if (livroDao.atualizaInfoLivro(idLivro, livro)) {
                JOptionPane.showMessageDialog(null, "Dados salvos com sucesso");

                // Pegando a imagem da JLabel.
                ImageIcon icon = (ImageIcon) jlbImagemCapaLivro.getIcon();

                // Relacionado ao insert da capa do livro.
                if (icon != null && icon.getImage() != null) {
                    Image imagem = icon.getImage();
                    // Redimensionando.
                    Image novaImagem = imagem.getScaledInstance(250, 350, Image.SCALE_SMOOTH);

                    // Convertendo a imagem para um array de bytes.
                    BufferedImage bufferedImage = new BufferedImage(novaImagem.getWidth(null), novaImagem.getHeight(null), BufferedImage.TYPE_INT_RGB);
                    bufferedImage.getGraphics().drawImage(novaImagem, 0, 0, null);
                    ByteArrayOutputStream stream = new ByteArrayOutputStream();

                    try {
                        ImageIO.write(bufferedImage, "jpg", stream);
                    } catch (IOException ex) {
                        Logger.getLogger(EdicaoDeLivro.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    byte[] bytesImagem = stream.toByteArray();

                    livro.setImagem(bytesImagem);
                    livro.setId(idLivro);

                    try {
                        imagemDAO.alterarImagem(livro);
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Erro ao salvar imagem: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
                    }
                }

                // Relacionado ao delete da capa do livro.
                if ((icon == null || icon.getImage() == null)) {
                    imagemDAO.excluirImagem(idLivro);
                }
                limpaLivroBusca();
                limpaLivroDados();
            }

        }
    }//GEN-LAST:event_btnSalvarAlteracoesLivroActionPerformed

    public void listarNacionalidades() {
        AutorDAO.listaNacionalidadesParaAutores(cboxNacionalidadeAutor);
    }

    public void sexoAutor() {
        cboxSexoAutor.addItem("Não Informado");
        cboxSexoAutor.addItem("Masculino");
        cboxSexoAutor.addItem("Feminino");
    }

    private void cboxCategoriaLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxCategoriaLivroActionPerformed
        // Executar após o clique final na ComboBox
        String dados[] = String.valueOf(cboxCategoriaLivro.getSelectedItem()).split(" - ");
        if (!dados[0].equalsIgnoreCase("Não Informada")) {
            cboxSubCategoriaLivro.removeAllItems();
            cboxSubCategoriaLivro.addItem("Não Informada");
            listarSubCategoria(dados[0]);

        } else {
            cboxSubCategoriaLivro.removeAllItems();
            cboxSubCategoriaLivro.addItem("Não Informada");
        }
    }//GEN-LAST:event_cboxCategoriaLivroActionPerformed

    private void txtDeBoasVindasLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeBoasVindasLivroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDeBoasVindasLivroActionPerformed

    private void txtTituloLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTituloLivroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTituloLivroActionPerformed

    private void btnLimparTelaLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparTelaLivroActionPerformed
        limpaLivroBusca();
        limpaLivroDados();
    }//GEN-LAST:event_btnLimparTelaLivroActionPerformed

    private void btnMostraTodosLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostraTodosLivroActionPerformed
        limpaLivroBusca();
        limpaLivroDados();
        LivroDAO.selectGeralLivroTitulo(cboxResultadoPesquisaLivro);
    }//GEN-LAST:event_btnMostraTodosLivroActionPerformed

    private void cboxIsbnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxIsbnSelectActionPerformed
        String selecionado = cboxIsbnSelect.getSelectedItem().toString();

        formatedIsbn.setValue(null);

        if (selecionado.equals("ISBN-13")) {
            formatedIsbn.setEditable(true);
            formatedIsbn.setBorder(javax.swing.BorderFactory.createTitledBorder("ISBN-13 *"));
            try {
                formatedIsbn.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-##-###-####-#")));
            } catch (ParseException ex) {
                Logger.getLogger(CadastroDeLivros.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (selecionado.equals("ISBN-10")) {
            formatedIsbn.setEditable(true);
            formatedIsbn.setBorder(javax.swing.BorderFactory.createTitledBorder("ISBN-10 *"));
            try {
                formatedIsbn.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#-###-#####-#")));
            } catch (ParseException ex) {
                Logger.getLogger(CadastroDeLivros.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            formatedIsbn.setEditable(false);
            formatedIsbn.setBorder(javax.swing.BorderFactory.createTitledBorder("ISBN *"));
            try {
                formatedIsbn.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#############")));
            } catch (ParseException ex) {
                Logger.getLogger(CadastroDeLivros.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cboxIsbnSelectActionPerformed

    private void btnPesquisaLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaLivroActionPerformed
        String pesquisa = txtBuscaLivro.getText();
        if (pesquisa.length() < 3) {
            JOptionPane.showMessageDialog(null, "Use pelo menos 3 caracteres na busca.");
        } else {
            limpaLivroBusca();
            limpaLivroDados();
            LivroDAO.selectPesquisaLivroTitulo(cboxResultadoPesquisaLivro, pesquisa);
        }
    }//GEN-LAST:event_btnPesquisaLivroActionPerformed

    private void cboxResultadoPesquisaLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxResultadoPesquisaLivroActionPerformed
        if (cboxResultadoPesquisaLivro.getSelectedItem() != null) {

            String itemSelecionado = cboxResultadoPesquisaLivro.getSelectedItem().toString();

            if (itemSelecionado.equals("Selecione")) {
                limpaLivroDados();
            }

            if (!itemSelecionado.equals("Nada encontrado") && !itemSelecionado.equals("Selecione")) {

                LivroDAO livroDao = new LivroDAO();

                Pattern pattern = Pattern.compile("-\\s(.*)");
                Matcher matcher = pattern.matcher(itemSelecionado);

                while (matcher.find()) {
                    String textoCapturado = matcher.group(1);
                    livroDao.selectIdDoLivro(textoCapturado);
                    txtTituloLivro.setText(textoCapturado);
                    txtIdLivro.setText(livroDao.selectIdDoLivro(textoCapturado));
                }

                int idDoLivro = Integer.parseInt(txtIdLivro.getText());
                livroDao.selectGeralComId(idDoLivro);

                // Tratamento do ISBN
                String numeroIsbn = livroDao.selectGeralComId(idDoLivro).getIsbn();

                if (numeroIsbn.replace("-", "").length() == 10) {
                    cboxIsbnSelect.setSelectedItem("ISBN-10");
                    formatedIsbn.setText(numeroIsbn);
                } else {
                    cboxIsbnSelect.setSelectedItem("ISBN-13");
                    formatedIsbn.setText(numeroIsbn);
                }

                int anoDePublicacao = livroDao.selectGeralComId(idDoLivro).getAnoDePublicacao();
                txtAnoDePublicacao.setText(Integer.toString(anoDePublicacao));
                int numeroDePaginas = livroDao.selectGeralComId(idDoLivro).getNumeroDePaginas();
                txtNumeroDePaginas.setText(Integer.toString(numeroDePaginas));
                cboxCategoriaLivro.setSelectedItem(livroDao.selectGeralComId(idDoLivro).getCategoria());
                cboxSubCategoriaLivro.setSelectedItem(livroDao.selectGeralComId(idDoLivro).getSubCategoria());
                txtNomeDaEditora.setText(livroDao.selectGeralComId(idDoLivro).getEditora());
                cboxLivroIdioma.setSelectedItem(livroDao.selectGeralComId(idDoLivro).getIdioma());
                txtSinopseDoLivro.setText(livroDao.selectGeralComId(idDoLivro).getSinopse());

                // Habilita os campos para edição
                txtIdLivro.setEnabled(true);
                txtTituloLivro.setEnabled(true);
                cboxIsbnSelect.setEnabled(true);
                formatedIsbn.setEnabled(true);
                txtAnoDePublicacao.setEnabled(true);
                txtNumeroDePaginas.setEnabled(true);
                txtNomeDaEditora.setEnabled(true);
                txtSinopseDoLivro.setEnabled(true);
                jlbImagemCapaLivro.setEnabled(true);
                cboxCategoriaLivro.setEnabled(true);
                cboxSubCategoriaLivro.setEnabled(true);
                cboxLivroIdioma.setEnabled(true);
                btnBuscarImagem.setEnabled(true);
                btnExcluirImagem.setEnabled(true);
                btnSalvarAlteracoesLivro.setEnabled(true);

                visualizadorDeImagem();

            }
        }

    }//GEN-LAST:event_cboxResultadoPesquisaLivroActionPerformed

    private void txtDeBoasVindasAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeBoasVindasAutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDeBoasVindasAutorActionPerformed

    private void txtDeBoasVindasAvaliacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeBoasVindasAvaliacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDeBoasVindasAvaliacaoActionPerformed

    private void txtBuscaAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscaAutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscaAutorActionPerformed

    private void btnMostrarTodosAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarTodosAutorActionPerformed
        limpaAutorBusca();
        limpaAutorDados();
        AutorDAO.selectGeralAutorNome(cboxResultadoPesquisaAutor);
    }//GEN-LAST:event_btnMostrarTodosAutorActionPerformed
    private void btnPesquisarAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarAutorActionPerformed
        String pesquisa = txtBuscaAutor.getText();
        if (pesquisa.length() < 3) {
            JOptionPane.showMessageDialog(null, "Use pelo menos 3 caracteres na busca.");
        } else {
            limpaAutorBusca();
            limpaAutorDados();
            AutorDAO.selectPesquisaAutorNome(cboxResultadoPesquisaAutor, pesquisa);
        }
    }//GEN-LAST:event_btnPesquisarAutorActionPerformed

    private void cboxResultadoPesquisaAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxResultadoPesquisaAutorActionPerformed
        if (cboxResultadoPesquisaAutor.getSelectedItem() != null) {

            String itemSelecionado = cboxResultadoPesquisaAutor.getSelectedItem().toString();

            if (itemSelecionado.equals("Selecione")) {
                limpaAutorDados();
            }

            if (!itemSelecionado.equals("Nada encontrado") && !itemSelecionado.equals("Selecione")) {

                AutorDAO autorDao = new AutorDAO();

                Pattern pattern = Pattern.compile("-\\s(.*)");
                Matcher matcher = pattern.matcher(itemSelecionado);

                while (matcher.find()) {
                    String textoCapturado = matcher.group(1);
                    autorDao.selectIdDoAutor(textoCapturado);
                    txtNomeAutor.setText(textoCapturado);
                    txtIdAutor.setText(autorDao.selectIdDoAutor(textoCapturado));
                }

                int idDoAutor = Integer.parseInt(txtIdAutor.getText());
                autorDao.selectGeralComId(idDoAutor);

                String sexoDoAutor = autorDao.selectGeralComId(idDoAutor).getSexo();
                String sexoDoAutorFormatado = null;

                if (sexoDoAutor.equals("MASC")) {
                    sexoDoAutorFormatado = "Masculino";
                } else if (sexoDoAutor.equals("FEM")) {
                    sexoDoAutorFormatado = "Feminino";
                } else {
                    sexoDoAutorFormatado = "Não Informado";
                }

                txtNomeAutor.setText(autorDao.selectGeralComId(idDoAutor).getNome());
                cboxNacionalidadeAutor.setSelectedItem(autorDao.selectGeralComId(idDoAutor).getNacionalidade());
                cboxSexoAutor.setSelectedItem(sexoDoAutorFormatado);

                txtNomeAutor.setEnabled(true);
                cboxNacionalidadeAutor.setEnabled(true);
                cboxSexoAutor.setEnabled(true);
                btnSalvarAlteracoesAutor.setEnabled(true);
            }
        }
    }//GEN-LAST:event_cboxResultadoPesquisaAutorActionPerformed

    private void btnLimparTelaAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparTelaAutorActionPerformed
        limpaAutorBusca();
        limpaAutorDados();
    }//GEN-LAST:event_btnLimparTelaAutorActionPerformed

    private void btnTelaPrinAbaAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTelaPrinAbaAutorActionPerformed
        new TelaPrincipalAdministrador().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnTelaPrinAbaAutorActionPerformed

    private void btnTelaPrinAbaAvaliacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTelaPrinAbaAvaliacaoActionPerformed
        new TelaPrincipalAdministrador().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnTelaPrinAbaAvaliacaoActionPerformed

    private void btnSalvarAlteracoesAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarAlteracoesAutorActionPerformed
        Autor autor = new Autor();
        AutorDAO autorDao = new AutorDAO();

        int idAutor = Integer.parseInt(txtIdAutor.getText());

        autor.setNome(txtNomeAutor.getText());
        autor.setNacionalidade(cboxNacionalidadeAutor.getSelectedItem().toString());

        String autorSexo = cboxSexoAutor.getSelectedItem().toString();
        String valorSelecionado = "OUTRO"; // Valor padrão.

        if (autorSexo.equals("Masculino")) {
            valorSelecionado = "MASC";
        } else if (autorSexo.equals("Feminino")) {
            valorSelecionado = "FEM";
        }

        autor.setSexo(valorSelecionado);

        autorDao.atualizaInfoAutor(idAutor, autor);

        if (autorDao.atualizaInfoAutor(idAutor, autor)) {
            JOptionPane.showMessageDialog(null, "Dados salvos com sucesso");
        }

        limpaAutorBusca();
        limpaAutorDados();

    }//GEN-LAST:event_btnSalvarAlteracoesAutorActionPerformed

    private void cboxLivroAvaliacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxLivroAvaliacaoActionPerformed
        if (cboxLivroAvaliacao != null) {
            String itemSelecionado = cboxLivroAvaliacao.getSelectedItem().toString();

            // Removendo a captura do nome do livro
            String regex = "ID (\\d+) - .+";
            Pattern pattern = Pattern.compile(regex);
            Matcher matcher = pattern.matcher(itemSelecionado);

            if (matcher.find()) {
                // Captura apenas o ID
                int idLivro = Integer.parseInt(matcher.group(1));
                cboxUsuarioAvaliacao.removeAllItems();
                AvaliacaoDAO.selectUsuarioQueAvaliouLivro(cboxUsuarioAvaliacao, idLivro);
            }
        }
    }//GEN-LAST:event_cboxLivroAvaliacaoActionPerformed

    private void btnAvaliacaoFiltroAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvaliacaoFiltroAtualizarActionPerformed
        LivroDAO.selectGeralLivroTitulo(cboxLivroAvaliacao);
    }//GEN-LAST:event_btnAvaliacaoFiltroAtualizarActionPerformed

    private void cboxUsuarioAvaliacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxUsuarioAvaliacaoActionPerformed
        LivroDAO livroDao = new LivroDAO();
        UsuarioCadastroDAO usuarioCadastroDao = new UsuarioCadastroDAO();
        AvaliacaoDAO avaliacaoDao = new AvaliacaoDAO();

        if (cboxUsuarioAvaliacao.getSelectedItem() != null && !cboxUsuarioAvaliacao.getSelectedItem().equals("Nada encontrado")) {
            String usuarioSelecionado = cboxUsuarioAvaliacao.getSelectedItem().toString();
            String livroSelecionado = cboxLivroAvaliacao.getSelectedItem().toString();

            String idDoLivro = null;
            String idDoUsuario = null;

            // Removendo a captura do ID do livro
            String regex = "ID \\d+ - (.+)";
            Pattern pattern = Pattern.compile(regex);
            Matcher matcher = pattern.matcher(livroSelecionado);

            if (matcher.find()) {
                // Captura o nome do livro
                String nomeLivro = matcher.group(1);
                idDoLivro = livroDao.selectIdDoLivro(nomeLivro);
            }

            idDoUsuario = usuarioCadastroDao.selectIdDoUsuario(usuarioSelecionado);

            if (idDoLivro != null && idDoUsuario != null) {

                txtDataAvaliacao.setText(avaliacaoDao.selectGeralComId(idDoLivro, idDoUsuario).getDataDeAvaliacao());
                String notaDaAvaliacao = avaliacaoDao.selectGeralComId(idDoLivro, idDoUsuario).getAvaliacaoDoUsuario();
                double notaDouble = Double.parseDouble(notaDaAvaliacao);
                int notaInteira = (int) notaDouble;
                txtComentarioAvaliacao.setText(avaliacaoDao.selectGeralComId(idDoLivro, idDoUsuario).getComentarioAvaliacao());

                switch (notaInteira) {
                    case 0 ->
                        cboxNotaAvaliacao.setSelectedItem("0 - Inaceitável");
                    case 1 ->
                        cboxNotaAvaliacao.setSelectedItem("1 - Péssimo");
                    case 2 ->
                        cboxNotaAvaliacao.setSelectedItem("2 - Muito Ruim");
                    case 3 ->
                        cboxNotaAvaliacao.setSelectedItem("3 - Ruim");
                    case 4 ->
                        cboxNotaAvaliacao.setSelectedItem("4 - Abaixo da Média");
                    case 5 ->
                        cboxNotaAvaliacao.setSelectedItem("5 - Regular");
                    case 6 ->
                        cboxNotaAvaliacao.setSelectedItem("6 - Satisfatório");
                    case 7 ->
                        cboxNotaAvaliacao.setSelectedItem("7 - Bom");
                    case 8 ->
                        cboxNotaAvaliacao.setSelectedItem("8 - Muito Bom");
                    case 9 ->
                        cboxNotaAvaliacao.setSelectedItem("9 - Ótimo");
                    case 10 ->
                        cboxNotaAvaliacao.setSelectedItem("10 - Excelente");
                    default ->
                        cboxNotaAvaliacao.setSelectedItem("Não Informada");

                }
            }
            txtComentarioAvaliacao.setEnabled(true);
            btnSalvarAlteracoesAvaliacao.setEnabled(true);
        } else {
            limpaAvaliacaoDados();
        }
    }//GEN-LAST:event_cboxUsuarioAvaliacaoActionPerformed

    private void btnLimparTelaAvaliacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparTelaAvaliacaoActionPerformed
        limpaAvaliacaoBusca();
        limpaAvaliacaoDados();
    }//GEN-LAST:event_btnLimparTelaAvaliacaoActionPerformed

    private void btnSalvarAlteracoesAvaliacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarAlteracoesAvaliacaoActionPerformed
        AvaliacaoDAO avaliacaoDao = new AvaliacaoDAO();
        UsuarioCadastroDAO usuarioCadastroDao = new UsuarioCadastroDAO();
        LivroDAO livroDao = new LivroDAO();

        String usuarioSelecionado = cboxUsuarioAvaliacao.getSelectedItem().toString();
        String livroSelecionado = cboxLivroAvaliacao.getSelectedItem().toString();

        String idDoLivro = null;
        String idDoUsuario = null;

        // Removendo a captura do ID do livro
        String regex = "ID \\d+ - (.+)";
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(livroSelecionado);

        if (matcher.find()) {
            // Captura o nome do livro
            String nomeLivro = matcher.group(1);
            idDoLivro = livroDao.selectIdDoLivro(nomeLivro);
        }

        idDoUsuario = usuarioCadastroDao.selectIdDoUsuario(usuarioSelecionado);
        String comentario = txtComentarioAvaliacao.getText();

        avaliacaoDao.atualizaComentarioAvaliacao(comentario, idDoLivro, idDoUsuario);

        JOptionPane.showMessageDialog(null, "Comentário atualizado!");

        limpaAvaliacaoBusca();
        limpaAvaliacaoDados();
    }//GEN-LAST:event_btnSalvarAlteracoesAvaliacaoActionPerformed

    public void listarIdiomasDoLivro() {
        LivroDAO.listaDeIdiomas(cboxLivroIdioma);
    }

    public void listarCategorias() {
        LivroCategoriaDAO.listarCategorias(cboxCategoriaLivro);
    }

    public void listarSubCategoria(String idCategoria) {
        LivroCategoriaDAO.listarSubCategoria(cboxSubCategoriaLivro, idCategoria);
    }

    public void limpaAvaliacaoBusca() {
        cboxLivroAvaliacao.setSelectedItem("Selecione");
        cboxUsuarioAvaliacao.removeAllItems();
    }

    public void limpaAvaliacaoDados() {
        txtDataAvaliacao.setText("");
        cboxNotaAvaliacao.setSelectedItem("Não Informada");
        txtComentarioAvaliacao.setText("");
        txtComentarioAvaliacao.setEnabled(false);
        btnSalvarAlteracoesAvaliacao.setEnabled(false);

    }

    public void limpaAutorBusca() {
        txtBuscaAutor.setText("");
        cboxResultadoPesquisaAutor.removeAllItems();
    }

    public void limpaAutorDados() {
        txtIdAutor.setText("");
        txtNomeAutor.setText("");

        cboxNacionalidadeAutor.removeAllItems();
        cboxSexoAutor.removeAllItems();

        listarNacionalidades();
        sexoAutor();

        cboxNacionalidadeAutor.setSelectedItem("Não Informada");
        cboxSexoAutor.setSelectedItem("Não Informado");

        txtNomeAutor.setEnabled(false);
        cboxNacionalidadeAutor.setEnabled(false);
        cboxSexoAutor.setEnabled(false);
        btnSalvarAlteracoesAutor.setEnabled(false);
    }

    public void limpaLivroBusca() {
        txtBuscaLivro.setText("");
        cboxResultadoPesquisaLivro.removeAllItems();
    }

    public void limpaLivroDados() {
        txtIdLivro.setText("");
        txtTituloLivro.setText("");
        cboxIsbnSelect.setSelectedItem("Selecione");
        formatedIsbn.setText(null);
        txtAnoDePublicacao.setText("");
        txtNumeroDePaginas.setText("");
        txtNomeDaEditora.setText("");
        txtSinopseDoLivro.setText("");
        jlbImagemCapaLivro.setIcon(null);

        // Limpa as comboboxs e definir os valores padrão.
        cboxCategoriaLivro.removeAllItems();
        cboxSubCategoriaLivro.removeAllItems();
        cboxLivroIdioma.removeAllItems();

        // Define os valores padrão novamente.
        listarCategorias();
        listarIdiomasDoLivro();

        // Define o item "Não Informado" como selecionado.
        cboxCategoriaLivro.setSelectedItem("Não Informada");
        cboxSubCategoriaLivro.setSelectedItem("Não Informada");
        cboxLivroIdioma.setSelectedItem("Não Informado");

        // Desabilita os campos para edição
        txtIdLivro.setEnabled(false);
        txtTituloLivro.setEnabled(false);
        cboxIsbnSelect.setEnabled(false);
        formatedIsbn.setEnabled(false);
        txtAnoDePublicacao.setEnabled(false);
        txtNumeroDePaginas.setEnabled(false);
        txtNomeDaEditora.setEnabled(false);
        txtSinopseDoLivro.setEnabled(false);
        jlbImagemCapaLivro.setEnabled(false);
        cboxCategoriaLivro.setEnabled(false);
        cboxSubCategoriaLivro.setEnabled(false);
        cboxLivroIdioma.setEnabled(false);
        btnBuscarImagem.setEnabled(false);
        btnExcluirImagem.setEnabled(false);
        btnSalvarAlteracoesLivro.setEnabled(false);
    }

    public void insereCapaDoLivro() {
        // Função do antigo botão "Inserir".
        // Movido e adaptado para o botão "Salvar Alterações"
        // Remover assim que mudança for constatada como estável.

        Livro livro = new Livro();
        ImagemDAO imagemDAO = new ImagemDAO();

        // Pegando a imagem da JLabel.
        ImageIcon icon = (ImageIcon) jlbImagemCapaLivro.getIcon();

        int idLivro = 0;

        if (!txtIdLivro.getText().isEmpty()) {
            idLivro = Integer.parseInt(txtIdLivro.getText());
        }

        if (idLivro == 0) {
            JOptionPane.showMessageDialog(null, "ID não encontrado. Verifique se o livro foi selecionado.");
        } else if (icon == null || icon.getImage() == null) {
            JOptionPane.showMessageDialog(null, "Você precisa selecionar uma imagem!");
        } else {
            Image imagem = icon.getImage();
            // Redimensionando.
            Image novaImagem = imagem.getScaledInstance(250, 350, Image.SCALE_SMOOTH);

            // Convertendo a imagem para um array de bytes.
            BufferedImage bufferedImage = new BufferedImage(novaImagem.getWidth(null), novaImagem.getHeight(null), BufferedImage.TYPE_INT_RGB);
            bufferedImage.getGraphics().drawImage(novaImagem, 0, 0, null);
            ByteArrayOutputStream stream = new ByteArrayOutputStream();

            try {
                ImageIO.write(bufferedImage, "jpg", stream);
            } catch (IOException ex) {
                Logger.getLogger(EdicaoDeLivro.class.getName()).log(Level.SEVERE, null, ex);
            }

            byte[] bytesImagem = stream.toByteArray();

            livro.setImagem(bytesImagem);
            livro.setId(idLivro);

            try {
                imagemDAO.alterarImagem(livro);
                JOptionPane.showMessageDialog(null, "Imagem salva com sucesso!");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao salvar imagem: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    public void removeCapaDoLivro() {
        // Função completa do botão "Excluir".
        // Movido e adaptado para o botão "Salvar Alterações"
        // Remover assim que mudança for constatada como estável.

        ImagemDAO minhaImagemDao = new ImagemDAO();

        ImageIcon icon = (ImageIcon) jlbImagemCapaLivro.getIcon();

        int idLivro = 0;

        if (!txtIdLivro.getText().isEmpty()) {
            idLivro = Integer.parseInt(txtIdLivro.getText());
        }

        if (idLivro == 0) {
            JOptionPane.showMessageDialog(null, "Selecione um livro");
        } else if (icon == null || icon.getImage() == null) {
            JOptionPane.showMessageDialog(null, "Não existe imagem de capa nesse livro");
        } else {
            int confirmacao = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir a imagem?", "Confirmação", JOptionPane.YES_NO_OPTION);

            if (confirmacao == JOptionPane.YES_OPTION) {

                minhaImagemDao.excluirImagem(idLivro);
                JOptionPane.showMessageDialog(null, "Imagem removida.");
                jlbImagemCapaLivro.setIcon(null);
            }
        }
    }

    public String verificaErroCadastro() {
        // Verifica se algum dos dados obrigatórios não foram preenchidos.

        ValidadorIsbn validadorIsbn = new ValidadorIsbn();

        String mensagemDeErro = null;

        // Livro sem idioma.
        if (cboxLivroIdioma.getSelectedItem().toString().equals("Não Informado")) {
            mensagemDeErro = "Selecione um idioma para o livro.";
        }

        String categoriaSelecionada = cboxCategoriaLivro.getSelectedItem().toString();
        String subCategoriaSelecionada = cboxSubCategoriaLivro.getSelectedItem().toString();

        // Livro sem categoria ou subcategoria.
        if (categoriaSelecionada.equals("Não Informada") || subCategoriaSelecionada.equals("Não Informada")) {
            mensagemDeErro = "Você precisa selecionar a categoria e sub-categoria do livro.";
        }

        // Livro sem número de páginas.
        if (txtNumeroDePaginas.getText().isBlank()) {
            mensagemDeErro = "Digite o número de páginas do livro.";
        }

        // Livro sem ano de publicação.
        if (txtAnoDePublicacao.getText().isBlank()) {
            mensagemDeErro = "Digite o ano de publicação do livro.";
        }

        // ISBN inválido.
        if (validadorIsbn.valida(formatedIsbn.getText()) == false) {
            mensagemDeErro = "ISBN inválido.";
        }

        String isbnSelecionado = cboxIsbnSelect.getSelectedItem().toString();
        String isbnParaTexto = formatedIsbn.getText().replaceAll("[\\s-]", ""); // Remove espaços e hífens

        // Tipo do ISBN foi selecionado mas nada foi digitado.
        if (!isbnSelecionado.equals("Selecione") && (isbnParaTexto.isBlank() || isbnParaTexto.equals(""))) {
            mensagemDeErro = "Você precisa digitar o ISBN";
        }

        // Tipo do ISBN não selecionado.
        if (cboxIsbnSelect.getSelectedItem().toString().equals("Selecione")) {
            mensagemDeErro = "Selecione o tipo do ISBN.";
        }

        // Livro sem título.
        if (txtTituloLivro.getText().isBlank()) {
            mensagemDeErro = "Digite um título válido para o livro.";
        }

        return mensagemDeErro;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EdicaoDeLivro.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EdicaoDeLivro.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EdicaoDeLivro.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EdicaoDeLivro.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EdicaoDeLivro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane boxSinopse;
    private javax.swing.JButton btnAvaliacaoFiltroAtualizar;
    private javax.swing.JButton btnBuscarImagem;
    private javax.swing.JButton btnExcluirImagem;
    private javax.swing.JButton btnLimparTelaAutor;
    private javax.swing.JButton btnLimparTelaAvaliacao;
    private javax.swing.JButton btnLimparTelaLivro;
    private javax.swing.JButton btnMostraTodosLivro;
    private javax.swing.JButton btnMostrarTodosAutor;
    private javax.swing.JButton btnPesquisaLivro;
    private javax.swing.JButton btnPesquisarAutor;
    private javax.swing.JButton btnSalvarAlteracoesAutor;
    private javax.swing.JButton btnSalvarAlteracoesAvaliacao;
    private javax.swing.JButton btnSalvarAlteracoesLivro;
    private javax.swing.JButton btnTelaPrinAbaAutor;
    private javax.swing.JButton btnTelaPrinAbaAvaliacao;
    private javax.swing.JButton btnTelaPrinAbaLivro;
    private javax.swing.JComboBox<String> cboxCategoriaLivro;
    private javax.swing.JComboBox<String> cboxIsbnSelect;
    private javax.swing.JComboBox<String> cboxLivroAvaliacao;
    private javax.swing.JComboBox<String> cboxLivroIdioma;
    private javax.swing.JComboBox<String> cboxNacionalidadeAutor;
    private javax.swing.JComboBox<String> cboxNotaAvaliacao;
    private javax.swing.JComboBox<String> cboxResultadoPesquisaAutor;
    private javax.swing.JComboBox<String> cboxResultadoPesquisaLivro;
    private javax.swing.JComboBox<String> cboxSexoAutor;
    private javax.swing.JComboBox<String> cboxSubCategoriaLivro;
    private javax.swing.JComboBox<String> cboxUsuarioAvaliacao;
    private javax.swing.JFormattedTextField formatedIsbn;
    private javax.swing.JTabbedPane janelaDeAbas;
    private javax.swing.JLabel jlbImagemCapaLivro;
    private javax.swing.JPanel jpnAutor;
    private javax.swing.JPanel jpnAvaliacao;
    private javax.swing.JPanel jpnLivro;
    private javax.swing.JScrollPane panComentarioAvaliacao;
    private javax.swing.JTextField txtAnoDePublicacao;
    private javax.swing.JTextField txtBuscaAutor;
    private javax.swing.JTextField txtBuscaLivro;
    private javax.swing.JTextArea txtComentarioAvaliacao;
    private javax.swing.JTextField txtDataAvaliacao;
    private javax.swing.JTextField txtDeBoasVindasAutor;
    private javax.swing.JTextField txtDeBoasVindasAvaliacao;
    private javax.swing.JTextField txtDeBoasVindasLivro;
    private javax.swing.JTextField txtIdAutor;
    private javax.swing.JTextField txtIdLivro;
    private javax.swing.JTextField txtNomeAutor;
    private javax.swing.JTextField txtNomeDaEditora;
    private javax.swing.JTextField txtNumeroDePaginas;
    private javax.swing.JTextArea txtSinopseDoLivro;
    private javax.swing.JTextField txtTituloLivro;
    // End of variables declaration//GEN-END:variables
}
