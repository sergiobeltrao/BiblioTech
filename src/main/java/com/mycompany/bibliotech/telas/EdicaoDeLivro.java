package com.mycompany.bibliotech.telas;

import com.mycompany.bibliotech.dao.LivroCategoriaDAO;
import com.mycompany.bibliotech.dao.LivroDAO;
import com.mycompany.bibliotech.dao.ImagemDAO;
import com.mycompany.bibliotech.model.bean.Livro;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.Timer;

public class EdicaoDeLivro extends javax.swing.JFrame {

    public EdicaoDeLivro() {
        initComponents();
        listarCategorias();
        listarIdiomasDoLivro();
        formatedIsbn.setEditable(false);
    }

    private void visualizadorDeImagem() {
        ImagemDAO minhaImagemDao = new ImagemDAO();

        int idLivro = 0;

        if (!txtIdLivro.getText().isEmpty()) {
            idLivro = Integer.parseInt(txtIdLivro.getText());
        }

        if (idLivro != 0) {
            byte[] bytesImagem = minhaImagemDao.buscarImagemPorId(idLivro);
            exibirImagem(bytesImagem);
        }
    }

    private void exibirImagem(byte[] bytesImagem) {
        if (bytesImagem != null && bytesImagem.length > 0) {
            try {
                // Converte o array de bytes para uma imagem
                ByteArrayInputStream bis = new ByteArrayInputStream(bytesImagem);
                BufferedImage bImage = ImageIO.read(bis);

                ImageIcon icone = new ImageIcon(bImage);
                // Define a imagem na JLabel
                jlbImagemCapaLivro.setIcon(icone);

            } catch (IOException e) {
                Logger.getLogger(EdicaoDeLivro.class.getName()).log(Level.SEVERE, null, e);
            }
        } else {
            // Se os bytes da imagem forem nulos, limpa a JLabel ou define uma imagem padrão
            jlbImagemCapaLivro.setIcon(null);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panModificarLivro = new javax.swing.JPanel();
        btnLimpar = new javax.swing.JButton();
        txtDeBoasVindasLivro = new javax.swing.JTextField();
        formatedIsbn = new javax.swing.JFormattedTextField();
        cboxSubCategoria = new javax.swing.JComboBox<>();
        txtNumeroDePaginas = new javax.swing.JTextField();
        boxSinopse = new javax.swing.JScrollPane();
        txtSinopseDoLivro = new javax.swing.JTextArea();
        btnTelaPrinCadLivro = new javax.swing.JButton();
        txtAnoDePublicacao = new javax.swing.JTextField();
        txtNomeDaEditora = new javax.swing.JTextField();
        cboxIsbnSelect = new javax.swing.JComboBox<>();
        txtTitulo = new javax.swing.JTextField();
        cboxCategoria = new javax.swing.JComboBox<>();
        cboxLivroIdioma = new javax.swing.JComboBox<>();
        jlbImagemCapaLivro = new javax.swing.JLabel();
        btnBuscarImagem = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        txtBuscaLivro = new javax.swing.JTextField();
        cboxResultadoPesquisaLivro = new javax.swing.JComboBox<>();
        btnPesquisaLivro = new javax.swing.JButton();
        btnSelecionaLivro = new javax.swing.JButton();
        btnMostraTodosLivro = new javax.swing.JButton();
        txtIdLivro = new javax.swing.JTextField();
        btnAtualizarCadastro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        panModificarLivro.setBackground(new java.awt.Color(255, 255, 255));

        btnLimpar.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        txtDeBoasVindasLivro.setEditable(false);
        txtDeBoasVindasLivro.setBackground(new java.awt.Color(255, 255, 255));
        txtDeBoasVindasLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtDeBoasVindasLivro.setText("Os campo com asterisco são de preenchimento obrigatório.");
        txtDeBoasVindasLivro.setBorder(null);
        txtDeBoasVindasLivro.setFocusable(false);
        txtDeBoasVindasLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeBoasVindasLivroActionPerformed(evt);
            }
        });

        formatedIsbn.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ISBN *", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        try {
            formatedIsbn.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        formatedIsbn.setEnabled(false);
        formatedIsbn.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        formatedIsbn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formatedIsbnActionPerformed(evt);
            }
        });

        cboxSubCategoria.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        cboxSubCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não Informada" }));
        cboxSubCategoria.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sub-categoria *", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        cboxSubCategoria.setEnabled(false);
        cboxSubCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxSubCategoriaActionPerformed(evt);
            }
        });

        txtNumeroDePaginas.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtNumeroDePaginas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Número de Páginas *", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        txtNumeroDePaginas.setEnabled(false);
        txtNumeroDePaginas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroDePaginasActionPerformed(evt);
            }
        });
        txtNumeroDePaginas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroDePaginasKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroDePaginasKeyTyped(evt);
            }
        });

        boxSinopse.setBackground(new java.awt.Color(255, 255, 255));
        boxSinopse.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sinopse do Livro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N

        txtSinopseDoLivro.setColumns(20);
        txtSinopseDoLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtSinopseDoLivro.setLineWrap(true);
        txtSinopseDoLivro.setRows(5);
        txtSinopseDoLivro.setEnabled(false);
        boxSinopse.setViewportView(txtSinopseDoLivro);

        btnTelaPrinCadLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnTelaPrinCadLivro.setText("Tela Principal");
        btnTelaPrinCadLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTelaPrinCadLivroActionPerformed(evt);
            }
        });

        txtAnoDePublicacao.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtAnoDePublicacao.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ano de Publicação *", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        txtAnoDePublicacao.setEnabled(false);
        txtAnoDePublicacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAnoDePublicacaoActionPerformed(evt);
            }
        });
        txtAnoDePublicacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAnoDePublicacaoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAnoDePublicacaoKeyTyped(evt);
            }
        });

        txtNomeDaEditora.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtNomeDaEditora.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nome da Editora", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        txtNomeDaEditora.setEnabled(false);

        cboxIsbnSelect.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        cboxIsbnSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "ISBN-13", "ISBN-10" }));
        cboxIsbnSelect.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tipo *", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        cboxIsbnSelect.setEnabled(false);
        cboxIsbnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxIsbnSelectActionPerformed(evt);
            }
        });

        txtTitulo.setEditable(false);
        txtTitulo.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtTitulo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Título *", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        txtTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTituloActionPerformed(evt);
            }
        });

        cboxCategoria.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        cboxCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não Informada" }));
        cboxCategoria.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Categoria *", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        cboxCategoria.setEnabled(false);
        cboxCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxCategoriaActionPerformed(evt);
            }
        });

        cboxLivroIdioma.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        cboxLivroIdioma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Não Informado" }));
        cboxLivroIdioma.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Idioma *", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        cboxLivroIdioma.setEnabled(false);

        jlbImagemCapaLivro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        btnBuscarImagem.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnBuscarImagem.setText("Buscar");
        btnBuscarImagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarImagemActionPerformed(evt);
            }
        });

        btnAlterar.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        txtBuscaLivro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Busca", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N

        cboxResultadoPesquisaLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        cboxResultadoPesquisaLivro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Resultado da Busca", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N

        btnPesquisaLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnPesquisaLivro.setText("Pesquisar");
        btnPesquisaLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaLivroActionPerformed(evt);
            }
        });

        btnSelecionaLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnSelecionaLivro.setText("Selecionar");
        btnSelecionaLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionaLivroActionPerformed(evt);
            }
        });

        btnMostraTodosLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnMostraTodosLivro.setText("Mostrar Todos");
        btnMostraTodosLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostraTodosLivroActionPerformed(evt);
            }
        });

        txtIdLivro.setEditable(false);
        txtIdLivro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtIdLivro.setBorder(javax.swing.BorderFactory.createTitledBorder("ID"));

        btnAtualizarCadastro.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnAtualizarCadastro.setText("Atualizar");

        javax.swing.GroupLayout panModificarLivroLayout = new javax.swing.GroupLayout(panModificarLivro);
        panModificarLivro.setLayout(panModificarLivroLayout);
        panModificarLivroLayout.setHorizontalGroup(
            panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panModificarLivroLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panModificarLivroLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(txtDeBoasVindasLivro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(panModificarLivroLayout.createSequentialGroup()
                        .addGroup(panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboxResultadoPesquisaLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(panModificarLivroLayout.createSequentialGroup()
                                    .addComponent(btnMostraTodosLivro)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnPesquisaLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtBuscaLivro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnSelecionaLivro))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addGroup(panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(panModificarLivroLayout.createSequentialGroup()
                                .addComponent(btnLimpar)
                                .addGap(32, 32, 32)
                                .addComponent(btnAtualizarCadastro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnTelaPrinCadLivro))
                            .addComponent(boxSinopse, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panModificarLivroLayout.createSequentialGroup()
                                .addGroup(panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNomeDaEditora, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboxLivroIdioma, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panModificarLivroLayout.createSequentialGroup()
                                            .addComponent(txtIdLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtTitulo))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panModificarLivroLayout.createSequentialGroup()
                                            .addGroup(panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(cboxIsbnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtAnoDePublicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(cboxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(18, 18, 18)
                                            .addGroup(panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(formatedIsbn, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtNumeroDePaginas, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(cboxSubCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(18, 18, 18)
                                .addComponent(jlbImagemCapaLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscarImagem)
                            .addComponent(btnAlterar)
                            .addComponent(btnExcluir))
                        .addGap(62, 62, 62))))
        );
        panModificarLivroLayout.setVerticalGroup(
            panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panModificarLivroLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(txtDeBoasVindasLivro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panModificarLivroLayout.createSequentialGroup()
                        .addComponent(txtBuscaLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnMostraTodosLivro)
                            .addComponent(btnPesquisaLivro))
                        .addGap(18, 18, 18)
                        .addComponent(cboxResultadoPesquisaLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSelecionaLivro))
                    .addGroup(panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(panModificarLivroLayout.createSequentialGroup()
                            .addGroup(panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtIdLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(597, 597, 597))
                        .addGroup(panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panModificarLivroLayout.createSequentialGroup()
                                .addComponent(btnBuscarImagem)
                                .addGap(18, 18, 18)
                                .addComponent(btnAlterar)
                                .addGap(18, 18, 18)
                                .addComponent(btnExcluir))
                            .addGroup(panModificarLivroLayout.createSequentialGroup()
                                .addGroup(panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(panModificarLivroLayout.createSequentialGroup()
                                        .addGroup(panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(cboxIsbnSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(formatedIsbn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtAnoDePublicacao, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtNumeroDePaginas, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(cboxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cboxSubCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(txtNomeDaEditora, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cboxLivroIdioma, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jlbImagemCapaLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(boxSinopse, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addGroup(panModificarLivroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnTelaPrinCadLivro)
                                    .addComponent(btnLimpar)
                                    .addComponent(btnAtualizarCadastro))))))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panModificarLivro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panModificarLivro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void listarIdiomasDoLivro() {
        LivroDAO.listaDeIdiomas(cboxLivroIdioma);
    }

    public void listarCategorias() {
        LivroCategoriaDAO.listarCategorias(cboxCategoria);
    }

    public void listarSubCategoria(String idCategoria) {
        LivroCategoriaDAO.listarSubCategoria(cboxSubCategoria, idCategoria);
    }


    private void btnBuscarImagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarImagemActionPerformed
        JFileChooser seletorDeImagem = new JFileChooser();
        int resultado = seletorDeImagem.showOpenDialog(null);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File arquivo = seletorDeImagem.getSelectedFile();
            String caminho = arquivo.getAbsolutePath();
            try {
                // Para redimensionar a imagem.
                BufferedImage redimensionar = ImageIO.read(new File(caminho));
                // O tamanho da imagem.
                Image imagem = redimensionar.getScaledInstance(250, 350, Image.SCALE_SMOOTH);
                ImageIcon icone = new ImageIcon(imagem);
                jlbImagemCapaLivro.setIcon(icone);
            } catch (IOException ex) {
                Logger.getLogger(EdicaoDeLivro.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            System.out.println("Nenhuma imagem foi selecionada.");
        }
    }//GEN-LAST:event_btnBuscarImagemActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        ImagemDAO minhaImagemDao = new ImagemDAO();

        ImageIcon icon = (ImageIcon) jlbImagemCapaLivro.getIcon();

        int idLivro = 0;

        if (!txtIdLivro.getText().isEmpty()) {
            idLivro = Integer.parseInt(txtIdLivro.getText());
        }

        if (idLivro == 0) {
            JOptionPane.showMessageDialog(null, "Selecione um livro");
        } else if (icon == null || icon.getImage() == null) {
            JOptionPane.showMessageDialog(null, "Não existe imagem de capa nesse livro");
        } else {
            int confirmacao = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja excluir a imagem?", "Confirmação", JOptionPane.YES_NO_OPTION);

            if (confirmacao == JOptionPane.YES_OPTION) {

                minhaImagemDao.excluirImagem(idLivro);
                JOptionPane.showMessageDialog(null, "Imagem removida.");
                jlbImagemCapaLivro.setIcon(null);
            }

        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        Livro livro = new Livro();
        ImagemDAO imagemDAO = new ImagemDAO();

        // Pegando a imagem da JLabel.
        ImageIcon icon = (ImageIcon) jlbImagemCapaLivro.getIcon();

        int idLivro = 0;

        if (!txtIdLivro.getText().isEmpty()) {
            idLivro = Integer.parseInt(txtIdLivro.getText());
        }

        if (idLivro == 0) {
            JOptionPane.showMessageDialog(null, "ID não encontrado. Verifique se o livro foi selecionado.");
        } else if (icon == null || icon.getImage() == null) {
            JOptionPane.showMessageDialog(null, "Você precisa selecionar uma imagem!");
        } else {
            Image imagem = icon.getImage();
            // Redimensionando.
            Image novaImagem = imagem.getScaledInstance(250, 350, Image.SCALE_SMOOTH);

            // Convertendo a imagem para um array de bytes.
            BufferedImage bufferedImage = new BufferedImage(novaImagem.getWidth(null), novaImagem.getHeight(null), BufferedImage.TYPE_INT_RGB);
            bufferedImage.getGraphics().drawImage(novaImagem, 0, 0, null);
            ByteArrayOutputStream stream = new ByteArrayOutputStream();

            try {
                ImageIO.write(bufferedImage, "jpg", stream);
            } catch (IOException ex) {
                Logger.getLogger(EdicaoDeLivro.class.getName()).log(Level.SEVERE, null, ex);
            }

            byte[] bytesImagem = stream.toByteArray();

            livro.setImagem(bytesImagem);
            livro.setId(idLivro);

            try {
                imagemDAO.alterarImagem(livro);
                JOptionPane.showMessageDialog(null, "Imagem salva com sucesso!");
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao salvar imagem: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_btnAlterarActionPerformed

    private void txtDeBoasVindasLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeBoasVindasLivroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDeBoasVindasLivroActionPerformed

    private void txtTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTituloActionPerformed

    private void txtAnoDePublicacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAnoDePublicacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAnoDePublicacaoActionPerformed

    private void txtAnoDePublicacaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAnoDePublicacaoKeyPressed
        String anoDePublicacao = txtAnoDePublicacao.getText();
        int tamanho = anoDePublicacao.length();
        char c = evt.getKeyChar();
        int keyCode = evt.getExtendedKeyCode();

        // Permite usar teclas como "Back Space" e "Delete" para corrigir algum erro.
        if (keyCode == KeyEvent.VK_BACK_SPACE || keyCode == KeyEvent.VK_DELETE) {
            txtAnoDePublicacao.setEditable(true);
        } else if (!Character.isDigit(c)) {
            evt.consume(); // Se não for um número, impede a entrada.
        } else {
            if (tamanho >= 4) {
                txtAnoDePublicacao.setEditable(false); // Desabilita a edição.
                Timer timer = new Timer(500, e -> {
                    txtAnoDePublicacao.setEditable(true); // Habilita novamente após 500ms.
                    ((Timer) e.getSource()).stop(); // Para o timer após a execução.
                });
                timer.setRepeats(false);
                timer.start();
            } else {
                txtAnoDePublicacao.setEditable(true); // Permite a edição se ainda não atingiu o limite
            }
        }
    }//GEN-LAST:event_txtAnoDePublicacaoKeyPressed

    private void txtAnoDePublicacaoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAnoDePublicacaoKeyTyped
        // Impede que texto seja digitado no campo.
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtAnoDePublicacaoKeyTyped

    private void txtNumeroDePaginasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroDePaginasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroDePaginasActionPerformed

    private void txtNumeroDePaginasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroDePaginasKeyPressed
        String anoDePublicacao = txtNumeroDePaginas.getText();
        int tamanho = anoDePublicacao.length();
        char c = evt.getKeyChar();
        int keyCode = evt.getExtendedKeyCode();

        // Permite usar teclas como "Back Space" e "Delete" para corrigir algum erro.
        if (keyCode == KeyEvent.VK_BACK_SPACE || keyCode == KeyEvent.VK_DELETE) {
            txtNumeroDePaginas.setEditable(true);
        } else if (!Character.isDigit(c)) {
            evt.consume(); // Se não for um número, impede a entrada.
        } else {
            if (tamanho >= 4) {
                txtNumeroDePaginas.setEditable(false); // Desabilita a edição.
                Timer timer = new Timer(500, e -> {
                    txtNumeroDePaginas.setEditable(true); // Habilita novamente após 500ms.
                    ((Timer) e.getSource()).stop(); // Para o timer após a execução.
                });
                timer.setRepeats(false);
                timer.start();
            } else {
                txtNumeroDePaginas.setEditable(true); // Permite a edição se ainda não atingiu o limite
            }
        }
    }//GEN-LAST:event_txtNumeroDePaginasKeyPressed

    private void txtNumeroDePaginasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroDePaginasKeyTyped
        // Impede que texto seja digitado no campo.
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNumeroDePaginasKeyTyped

    private void cboxCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxCategoriaActionPerformed
        // Executar após o clique final na ComboBox
        String dados[] = String.valueOf(cboxCategoria.getSelectedItem()).split(" - ");
        if (!dados[0].equalsIgnoreCase("Não Informada")) {
            cboxSubCategoria.removeAllItems();
            cboxSubCategoria.addItem("Não Informada");
            listarSubCategoria(dados[0]);

        } else {
            cboxSubCategoria.removeAllItems();
            cboxSubCategoria.addItem("Não Informada");
        }
    }//GEN-LAST:event_cboxCategoriaActionPerformed

    private void cboxSubCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxSubCategoriaActionPerformed

    }//GEN-LAST:event_cboxSubCategoriaActionPerformed

    private void btnTelaPrinCadLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTelaPrinCadLivroActionPerformed

        new TelaPrincipalAdministrador().setVisible(true);
        this.dispose();

    }//GEN-LAST:event_btnTelaPrinCadLivroActionPerformed

    private void formatedIsbnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formatedIsbnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formatedIsbnActionPerformed

    private void cboxIsbnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxIsbnSelectActionPerformed
        String selecionado = cboxIsbnSelect.getSelectedItem().toString();

        formatedIsbn.setValue(null);

        if (selecionado.equals("ISBN-13")) {
            formatedIsbn.setEditable(true);
            formatedIsbn.setBorder(javax.swing.BorderFactory.createTitledBorder("ISBN-13 *"));
            try {
                formatedIsbn.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-##-###-####-#")));
            } catch (ParseException ex) {
                Logger.getLogger(CadastroDeLivros.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (selecionado.equals("ISBN-10")) {
            formatedIsbn.setEditable(true);
            formatedIsbn.setBorder(javax.swing.BorderFactory.createTitledBorder("ISBN-10 *"));
            try {
                formatedIsbn.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#-###-#####-#")));
            } catch (ParseException ex) {
                Logger.getLogger(CadastroDeLivros.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            formatedIsbn.setEditable(false);
            formatedIsbn.setBorder(javax.swing.BorderFactory.createTitledBorder("ISBN *"));
            try {
                formatedIsbn.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#############")));
            } catch (ParseException ex) {
                Logger.getLogger(CadastroDeLivros.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cboxIsbnSelectActionPerformed

    private void btnPesquisaLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaLivroActionPerformed
        String pesquisa = txtBuscaLivro.getText();
        if (pesquisa.length() < 3) {
            JOptionPane.showMessageDialog(null, "Use pelo menos 3 caracteres na busca.");
        } else {
            LivroDAO.selectPesquisaLivroTitulo(cboxResultadoPesquisaLivro, pesquisa);
        }
    }//GEN-LAST:event_btnPesquisaLivroActionPerformed

    private void btnMostraTodosLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostraTodosLivroActionPerformed

        LivroDAO.selectGeralLivroTitulo(cboxResultadoPesquisaLivro);

    }//GEN-LAST:event_btnMostraTodosLivroActionPerformed


    private void btnSelecionaLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionaLivroActionPerformed

        if (cboxResultadoPesquisaLivro.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Não há nada para selecionar");
        } else {

            LivroDAO livroDao = new LivroDAO();

            String itemSelecionado = cboxResultadoPesquisaLivro.getSelectedItem().toString();
            //txtNomeDoLivroSelecionado.setText(itemSelecionado);

            Pattern pattern = Pattern.compile("-\\s(.*)");
            Matcher matcher = pattern.matcher(itemSelecionado);

            while (matcher.find()) {
                String textoCapturado = matcher.group(1);
                livroDao.selectIdDoLivro(textoCapturado);
                txtTitulo.setText(textoCapturado);
                txtIdLivro.setText(livroDao.selectIdDoLivro(textoCapturado));

            }

            visualizadorDeImagem();
        }
    }//GEN-LAST:event_btnSelecionaLivroActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        txtTitulo.setText("");
        cboxIsbnSelect.setSelectedItem("Selecione");
        formatedIsbn.setText(null);
        txtAnoDePublicacao.setText("");
        txtNumeroDePaginas.setText("");
        cboxCategoria.setSelectedItem("Não Informada");
        cboxSubCategoria.setSelectedItem("Não Informada");
        txtNomeDaEditora.setText("");
        cboxLivroIdioma.setSelectedItem("Não Informado");
        txtSinopseDoLivro.setText("");
    }//GEN-LAST:event_btnLimparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EdicaoDeLivro.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EdicaoDeLivro.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EdicaoDeLivro.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EdicaoDeLivro.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EdicaoDeLivro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane boxSinopse;
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnAtualizarCadastro;
    private javax.swing.JButton btnBuscarImagem;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnMostraTodosLivro;
    private javax.swing.JButton btnPesquisaLivro;
    private javax.swing.JButton btnSelecionaLivro;
    private javax.swing.JButton btnTelaPrinCadLivro;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboxCategoria;
    private javax.swing.JComboBox<String> cboxIsbnSelect;
    private javax.swing.JComboBox<String> cboxLivroIdioma;
    private javax.swing.JComboBox<String> cboxResultadoPesquisaLivro;
    private javax.swing.JComboBox<String> cboxSubCategoria;
    private javax.swing.JFormattedTextField formatedIsbn;
    private javax.swing.JLabel jlbImagemCapaLivro;
    private javax.swing.JPanel panModificarLivro;
    private javax.swing.JTextField txtAnoDePublicacao;
    private javax.swing.JTextField txtBuscaLivro;
    private javax.swing.JTextField txtDeBoasVindasLivro;
    private javax.swing.JTextField txtIdLivro;
    private javax.swing.JTextField txtNomeDaEditora;
    private javax.swing.JTextField txtNumeroDePaginas;
    private javax.swing.JTextArea txtSinopseDoLivro;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
