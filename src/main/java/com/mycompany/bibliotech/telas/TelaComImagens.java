package com.mycompany.bibliotech.telas;

import com.mycompany.bibliotech.dao.MinhaImagemDAO;
import com.mycompany.bibliotech.model.bean.MinhaImagem;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class TelaComImagens extends javax.swing.JFrame {

    public TelaComImagens() {
        initComponents();
        listarImagens();
        configurarComboBox();
    }

    private void limparCampos() {
        txtNomeDaImagem.setText("");
        jlbImagem.setIcon(null);
    }

private void configurarComboBox() {
    cboxLivro.addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            MinhaImagemDAO minhaImagemDao = new MinhaImagemDAO();
            if (cboxLivro.getSelectedItem() != null && !cboxLivro.getSelectedItem().toString().equals("Selecione")) {
                String itemSelecionado = cboxLivro.getSelectedItem().toString();
                String[] partes = itemSelecionado.split(" - ");
                int id = Integer.parseInt(partes[0]);

                byte[] bytesImagem = minhaImagemDao.buscarImagemPorId(id);
                exibirImagem(bytesImagem);
            } else {
                // Se n√£o houver item selecionado ou for "Selecione", limpa os campos
                limparCampos();
            }
        }
    });
}


    private void exibirImagem(byte[] bytesImagem) {
        try {
            // Converte o array de bytes para uma imagem
            ByteArrayInputStream bis = new ByteArrayInputStream(bytesImagem);
            BufferedImage bImage = ImageIO.read(bis);
            ImageIcon icon = new ImageIcon(bImage);

            // Define a imagem na JLabel
            jlbImagem.setIcon(icon);
        } catch (IOException e) {
            Logger.getLogger(TelaComImagens.class.getName()).log(Level.SEVERE, null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panTelaComImagem = new javax.swing.JPanel();
        txtNomeDaImagem = new javax.swing.JTextField();
        jlbImagem = new javax.swing.JLabel();
        btnInserir = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnSalavar = new javax.swing.JButton();
        cboxLivro = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        panTelaComImagem.setBackground(new java.awt.Color(255, 255, 255));

        txtNomeDaImagem.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtNomeDaImagem.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Nome do Livro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N

        jlbImagem.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        btnInserir.setText("Inserir");
        btnInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirActionPerformed(evt);
            }
        });

        btnAlterar.setText("Alterar");

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnSalavar.setText("Salvar");
        btnSalavar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalavarActionPerformed(evt);
            }
        });

        cboxLivro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Livros", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N

        javax.swing.GroupLayout panTelaComImagemLayout = new javax.swing.GroupLayout(panTelaComImagem);
        panTelaComImagem.setLayout(panTelaComImagemLayout);
        panTelaComImagemLayout.setHorizontalGroup(
            panTelaComImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panTelaComImagemLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(panTelaComImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cboxLivro, 0, 250, Short.MAX_VALUE)
                    .addGroup(panTelaComImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtNomeDaImagem, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                        .addComponent(jlbImagem, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(panTelaComImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnLimpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSalavar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnInserir, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        panTelaComImagemLayout.setVerticalGroup(
            panTelaComImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panTelaComImagemLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(cboxLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(txtNomeDaImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(panTelaComImagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panTelaComImagemLayout.createSequentialGroup()
                        .addComponent(btnInserir)
                        .addGap(18, 18, 18)
                        .addComponent(btnAlterar)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnLimpar)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalavar))
                    .addComponent(jlbImagem, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panTelaComImagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panTelaComImagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void listarImagens() {
        MinhaImagemDAO.listarImagens(cboxLivro);
    }
    private void btnSalavarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalavarActionPerformed
        MinhaImagem minhaImagem = new MinhaImagem();
        MinhaImagemDAO imagemDAO = new MinhaImagemDAO();

        // Pegando o nome do livro.
        String nomeImagem = txtNomeDaImagem.getText();

        // Pegando a imagem da JLabel.
        ImageIcon icon = (ImageIcon) jlbImagem.getIcon();

        if (icon == null || icon.getImage() == null) {
            JOptionPane.showMessageDialog(null, "Voc√™ precisa selecionar uma imagem!");
        } else if (nomeImagem.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Voc√™ precisa digitar um t√≠tulo!");
        } else {
            Image imagem = icon.getImage();
            // Redimensionando.
            Image novaImagem = imagem.getScaledInstance(250, 350, Image.SCALE_SMOOTH);

            // Convertendo a imagem para um array de bytes.
            BufferedImage bufferedImage = new BufferedImage(novaImagem.getWidth(null), novaImagem.getHeight(null), BufferedImage.TYPE_INT_RGB);
            bufferedImage.getGraphics().drawImage(novaImagem, 0, 0, null);
            ByteArrayOutputStream stream = new ByteArrayOutputStream();

            try {
                ImageIO.write(bufferedImage, "jpg", stream);
            } catch (IOException ex) {
                Logger.getLogger(TelaComImagens.class.getName()).log(Level.SEVERE, null, ex);
            }

            byte[] bytesImagem = stream.toByteArray();

            minhaImagem.setNome(nomeImagem);
            minhaImagem.setImagem(bytesImagem);

            try {
                imagemDAO.inserirImagem(minhaImagem);
                JOptionPane.showMessageDialog(null, "Imagem salva com sucesso!");

                // Limpa os campos
                cboxLivro.setSelectedItem("Selecione");
                txtNomeDaImagem.setText("");
                jlbImagem.setIcon(null);
                // Carrega a comboBox novamente
                listarImagens();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao salvar imagem: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);

            }
        }

    }//GEN-LAST:event_btnSalavarActionPerformed

    private void btnInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirActionPerformed
        JFileChooser seletorDeImagem = new JFileChooser();
        seletorDeImagem.showOpenDialog(null);
        File arquivo = seletorDeImagem.getSelectedFile();
        String caminho = arquivo.getAbsolutePath();
        try {
            // Para redimensionar a imagem.
            BufferedImage redimensionar = ImageIO.read(new File(caminho));
            // O tamanho da imagem.
            Image imagem = redimensionar.getScaledInstance(250, 350, Image.SCALE_SMOOTH);
            ImageIcon icone = new ImageIcon(imagem);
            jlbImagem.setIcon(icone);
        } catch (IOException ex) {
            Logger.getLogger(TelaComImagens.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnInserirActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        cboxLivro.setSelectedItem("Selecione");
        txtNomeDaImagem.setText("");
        jlbImagem.setIcon(null);
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaComImagens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaComImagens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaComImagens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaComImagens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaComImagens().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnInserir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnSalavar;
    private javax.swing.JComboBox<String> cboxLivro;
    private javax.swing.JLabel jlbImagem;
    private javax.swing.JPanel panTelaComImagem;
    private javax.swing.JTextField txtNomeDaImagem;
    // End of variables declaration//GEN-END:variables
}
