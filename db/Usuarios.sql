-- Tabela para armazenar informações de USUÁRIO
CREATE TABLE TB_USER (
  TB_USER_ID INT AUTO_INCREMENT NOT NULL,
  TB_USER_NOME VARCHAR(50) NOT NULL,
  TB_USER_SOBRENOME VARCHAR(50) NOT NULL,
  TB_USER_DATANASC DATE NOT NULL,
  TB_USER_EMAIL VARCHAR(100) NOT NULL,
  TB_USER_SENHA VARCHAR(100) NOT NULL, -- Recomenda-se o uso de um hash de senha seguro
  TB_USER_TYPE ENUM('ADMIN', 'FUNCIONARIO', 'CLIENTE') NOT NULL,
  TB_USER_CRIA DATETIME NOT NULL,
  TB_USER_MOD DATETIME NOT NULL,
  TB_USER_STATUS BOOLEAN NOT NULL,
  TB_USER_CEL VARCHAR(15) NOT NULL,
  TB_USER_NICK VARCHAR(30) NOT NULL,
  TB_USER_SEXO ENUM('MASCULINO', 'FEMININO', 'OUTRO') NOT NULL,
  PRIMARY KEY (TB_USER_ID)
);

-- Tabela para armazenar informações de FUNCIONÁRIO
CREATE TABLE TB_FUNCIONARIO (
  TB_FUN_ID INT AUTO_INCREMENT NOT NULL,
  TB_USER_ID INT NOT NULL,
  TB_FUN_CARGO VARCHAR(25) NOT NULL,
  TB_FUN_ENTRADA DATE NOT NULL,
  TB_FUN_SAIDA DATE, -- Pode ser nulo se o funcionário ainda está empregado
  TB_FUN_SALARIO DECIMAL(10, 2) NOT NULL,
  PRIMARY KEY (TB_FUN_ID),
  FOREIGN KEY (TB_USER_ID) REFERENCES TB_USER (TB_USER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Tabela para armazenar informações de CLIENTE
CREATE TABLE TB_CLIENTE (
  TB_CLI_ID INT AUTO_INCREMENT NOT NULL,
  TB_USER_ID INT NOT NULL,
  PRIMARY KEY (TB_CLI_ID),
  FOREIGN KEY (TB_USER_ID) REFERENCES TB_USER (TB_USER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Tabela para armazenar informações de ENDEREÇO
CREATE TABLE TB_ADDRESS (
  TB_ADDRESS_ID INT AUTO_INCREMENT NOT NULL,
  TB_USER_ID INT NOT NULL,
  TB_ADDRESS_RUA VARCHAR(150) NOT NULL,
  TB_ADDRESS_NUM VARCHAR(10) NOT NULL,
  TB_ADDRESS_COMP VARCHAR(50),
  TB_ADDRESS_BAIRRO VARCHAR(100) NOT NULL,
  TB_ADDRESS_CIDADE VARCHAR(100) NOT NULL,
  TB_ADDRESS_UF CHAR(2) NOT NULL,
  TB_ADDRESS_PAIS VARCHAR(50) NOT NULL,
  TB_ADDRESS_CEP CHAR(8) NOT NULL,
  PRIMARY KEY (TB_ADDRESS_ID),
  FOREIGN KEY (TB_USER_ID) REFERENCES TB_USER (TB_USER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Tabela para armazenar informações de PERMISSÕES
CREATE TABLE PERMISSIONS (
  PERMISSION_ID INT AUTO_INCREMENT NOT NULL,
  USER_ID INT NOT NULL,
  RESOURCE_TYPE VARCHAR(50) NOT NULL,
  PERMISSION VARCHAR(10) NOT NULL,
  CREATED_AT DATETIME NOT NULL,
  PRIMARY KEY (PERMISSION_ID)
);

-- Exemplo de permissões iniciais:
-- Admin tem permissões para FUNCIONARIO e CLIENTE
INSERT INTO PERMISSIONS (USER_ID, RESOURCE_TYPE, PERMISSION, CREATED_AT)
VALUES
  (adminUserID, 'FUNCIONARIO', 'READ, WRITE, DELETE', NOW()),
  (adminUserID, 'CLIENTE', 'READ, WRITE, DELETE', NOW());

-- Funcionários têm permissões para CLIENTE
INSERT INTO PERMISSIONS (USER_ID, RESOURCE_TYPE, PERMISSION, CREATED_AT)
VALUES
  (funcionarioUserID, 'CLIENTE', 'READ, WRITE', NOW());

-- Clientes têm permissões limitadas
INSERT INTO PERMISSIONS (USER_ID, RESOURCE_TYPE, PERMISSION, CREATED_AT)
VALUES
  (clienteUserID, 'CLIENTE', 'READ', NOW());
