CREATE DATABASE BIBLIOTECH;

USE BIBLIOTECH;

CREATE TABLE USUARIO (
  USE_ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  USE_NICK VARCHAR(30) NOT NULL UNIQUE,  /* USAR NO LOGIN */
  USE_SENHA VARCHAR(100) NOT NULL,   /* USAR NO LOGIN */
  USE_TYPE ENUM('ADMIN', 'BIBLIOTECARIO', 'CLIENTE') NOT NULL,   /* USAR NO LOGIN */
  USE_NOME VARCHAR(50) NOT NULL,
  USE_SOBRENOME VARCHAR(50),
  USE_DATANASC DATE,
  USE_EMAIL VARCHAR(100) NOT NULL UNIQUE,
  USE_CRIA DATETIME,
  USE_SEXO ENUM ('MASC', 'FEM', 'OUTRO'),
  USE_CPF VARCHAR (11)
);

INSERT INTO USUARIO VALUES
  ( NULL, 'admin', 'admin', 'ADMIN', 'Bruno', 'Fernades', '1990-02-28', 'bruno@email.com',  NOW(), 'MASC', '11111111111'),
  ( NULL, 'sergio', 'sergio', 'BIBLIOTECARIO', 'Sérgio', 'Beltrão', '1990-02-28', 'sergio@email.com',  NOW(), 'MASC', '22222222222'),
  ( NULL, 'john', 'john', 'CLIENTE', 'Jonatas', 'Sousa', '1990-02-28', 'john@email.com',  NOW(), 'MASC','33333333333');
  
  CREATE TABLE TELEFONE (
	TEL_ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
	TEL_TIPO ENUM ('RESIDENCIAL', 'COMERCIAL', 'CELULAR')NOT NULL,
	TEL_TELEFONE VARCHAR (15) NOT NULL	
);
 
 INSERT INTO TELEFONE VALUES (NULL, 'CELULAR', '11 994545058'), 
 (NULL, 'CELULAR', '11 975630714'), (NULL, 'CELULAR', '11 91340-9833');
 

  CREATE TABLE ENDERECO (
  END_ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  END_RUA VARCHAR(150),
  END_NUM INT,
  END_COMP VARCHAR(50),
  END_BAIRRO VARCHAR(100),
  END_CIDADE VARCHAR(100),
  END_UF VARCHAR (2),
  END_PAIS VARCHAR(50),
  END_CEP VARCHAR(10)
);

INSERT INTO ENDERECO VALUES (NULL, 'Dolores', 13, 'APTO', 'Mooca', 'Sao Paulo', 'SP', 'BRASIL', '987321654'),
(NULL, 'Avenida Atlântica', '1702', NULL, 'Copacabana', ' Rio de Janeiro', 'RJ', 'BRASIL', '22021001'),
(NULL, 'Rua22', '122', NULL, 'St. Oeste', 'Goiânia', 'GO', 'BRASIL', '74120140');
  
CREATE TABLE FUNCIONARIO (
  FUN_ID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
  FUN_ENTRADA DATE NOT NULL,
  FUN_SAIDA DATE,
  FUN_SALARIO DECIMAL(10, 2) NOT NULL
);

INSERT INTO FUNCIONARIO  VALUES
  (NULL, '2022-01-15', NULL, 8000.00),
  (NULL, '2021-03-10', NULL, 6000.00);

CREATE TABLE LIVRO ( 
	ID_LIVRO INT PRIMARY KEY AUTO_INCREMENT,
	LIV_NOME_LIVRO VARCHAR (100) NOT NULL,
	LIV_ISBN VARCHAR (100)NOT NULL,
	LIV_ANO INT NOT NULL, 
	LIV_PAGINA INT NOT NULL,
	LIV_QUANTIDADE INT,
	LIV_CATEGORIA VARCHAR (50)NOT NULL,
	LIV_PRECO DECIMAL (6,2),
    LIV_SUBCATEGORIA VARCHAR (50) NOT NULL,
    LIV_IDIOMA VARCHAR (50) NOT NULL,
    LIV_EDITORA VARCHAR (50),
    LIV_SINOPSE TEXT
);

INSERT INTO LIVRO VALUES(
	NULL, 'O Segredo das Estrelas', '978-1234567890', 1980, 320, 10,  '1 - Ficção', '180.20', '40 - Programação', 'Portugues - Brasil', 'Atlas',NULL),
    (NULL, 'O Alquimista', '978-8584390670', 1988, 208, 20,  '1 - Ficção', '40.15', '4 - Fantasia', 'Português - Brasil', 'Osires', NULL);


CREATE TABLE AUTOR(
	ID_AUTOR INT PRIMARY KEY AUTO_INCREMENT,
	AUT_NOME_AUTOR VARCHAR (100)NOT NULL,
	AUT_DATA_NASC DATE,
	AUT_NACIONALIDADE VARCHAR (50) ,
	AUT_BIBLIOGRAFIA TEXT,
	AUT_SEXO ENUM ('MASC', 'FEM', 'OUTRO')
);
    
INSERT INTO AUTOR ( AUT_NOME_AUTOR, AUT_DATA_NASC, AUT_NACIONALIDADE, AUT_SEXO) 
 VALUES ('Laura Bens', '1997-01-27', 'Brazil', 'FEM' );


CREATE TABLE FINANCEIRO ( 
	ID_FINANCEIRO INT NOT NULL PRIMARY KEY,
    FIN_SALDO DECIMAL (8,2) NOT NULL, /*criar codigo para ver salto total*/
    FIN_DATA_TRANSACAO DATE NOT NULL,
    FIN_TIPO ENUM ('PAGAMENTO', 'RECEBIDO'), /* usuar a resposta deste campo para soma ou subtrair do saldo */
    FIN_USUARIO INT NOT NULL, FOREIGN KEY (FIN_USUARIO) REFERENCES USUARIO(USE_ID)
);

CREATE TABLE AVALIACAO (
    ID_AVALIACAO INT PRIMARY KEY AUTO_INCREMENT,
    AVA_FK_LIVRO INT NOT NULL, FOREIGN KEY (AVA_FK_LIVRO) REFERENCES LIVRO (ID_LIVRO),
    AVA_USUARIO INT,
    AVA_TOTAL DECIMAL(6, 2), /* criar codigo para somar as notas dos usuarios */
    AVA_COMENTARIO TEXT,
    AVA_DATA_AVALIACAO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    AVA_FK_USUARIO INT, FOREIGN KEY (AVA_FK_USUARIO) REFERENCES USUARIO (USE_ID)
);

CREATE TABLE FAVORITO ( 
	ID INT PRIMARY KEY AUTO_INCREMENT,
    FAV_CATEGORIA1 VARCHAR (20),
    FAV_SUB1 VARCHAR (20),
    FAV_CATEGORIA2 VARCHAR (20),
    FAV_SUB2 VARCHAR (20),
    FAV_USUARIO INT NOT NULL, FOREIGN KEY (FAV_USUARIO) REFERENCES USUARIO(USE_ID)
);
/* APARTIR DESTA LINHA ESTAO AS TABELAS COM AS CHAVES ESTRANGEIRAS*/

/*TABELA DE CHAVES ESTRANGEIRAS DE LIVRO */
CREATE TABLE LIVRO_USUARIO (
	LIVRO_CHAVE INT NOT NULL, FOREIGN KEY (LIVRO_CHAVE) REFERENCES LIVRO (ID_LIVRO),
	LIVRO_USER INT NOT NULL, FOREIGN KEY (LIVRO_USER) REFERENCES USUARIO (USE_ID),
	PRIMARY KEY (LIVRO_CHAVE, LIVRO_USER)
);

CREATE TABLE LIVRO_AUTOR ( 
    LIVRO_CHAVE INT NOT NULL, FOREIGN KEY (LIVRO_CHAVE) REFERENCES LIVRO (ID_LIVRO),
    LIVRO_AUTOR INT NOT NULL, FOREIGN KEY (LIVRO_AUTOR) REFERENCES AUTOR (ID_AUTOR),
    PRIMARY KEY (LIVRO_CHAVE, LIVRO_AUTOR)
);

/*TABELA DE CHAVES ESTRANGEIRAS TELEFONE */
CREATE TABLE TELEFONE_USUARIO ( 
    TELEFONE_USER INT NOT NULL, FOREIGN KEY (TELEFONE_USER) REFERENCES USUARIO(USE_ID),
    TELEFONE_FONE INT NOT NULL, FOREIGN KEY (TELEFONE_FONE) REFERENCES TELEFONE(TEL_ID),
	PRIMARY KEY (TELEFONE_USER, TELEFONE_FONE)
);
    
CREATE TABLE TELEFONE_AUTOR ( 
    TELEFONE_FONE INT NOT NULL, FOREIGN KEY (TELEFONE_FONE) REFERENCES TELEFONE(TEL_ID),
    TELEFONE_AUTOR INT NOT NULL, FOREIGN KEY (TELEFONE_AUTOR) REFERENCES AUTOR (ID_AUTOR),
    PRIMARY KEY (TELEFONE_FONE, TELEFONE_AUTOR)
);


CREATE TABLE ENDERECO_USUARIO ( 
    ENDERECO_USER INT NOT NULL, FOREIGN KEY (ENDERECO_USER) REFERENCES USUARIO (USE_ID),
    ENDERECO_CHAVE INT NOT NULL, FOREIGN KEY (ENDERECO_CHAVE) REFERENCES ENDERECO (END_ID),
	PRIMARY KEY (ENDERECO_USER, ENDERECO_CHAVE)
);

/*INSERT DOS VINCULOS DE ENDEREÇO E TELEFONE */

INSERT INTO TELEFONE_USUARIO VALUES (3, 2), (1, 1), (2, 3);


/*Comando usado para trazer todas as informaoes de um usuario. para ver de outro usuario é só trocar o numero no fim 
A letra em frente de cada atributo é para o comando saber de qual tabela esta vindo a coluna
SELECT U.USE_NICK, U.USE_SENHA, U.USE_TYPE, U.USE_NOME, U.USE_SOBRENOME, U.USE_DATANASC, 
U.USE_EMAIL, U.USE_CRIA, U.USE_SEXO, U.USE_CPF, E.END_RUA, E.END_NUM, E.END_BAIRRO, 
E.END_CIDADE, E.END_UF, E.END_PAIS, E.END_CEP, T.TEL_TIPO, T.TEL_TELEFONE
FROM USUARIO U
LEFT JOIN ENDERECO_USUARIO EU ON U.USE_ID = EU.ENDERECO_USER
LEFT JOIN ENDERECO E ON EU.ENDERECO_CHAVE = E.END_ID
LEFT JOIN TELEFONE_USUARIO TU ON U.USE_ID = TU.TELEFONE_USER
LEFT JOIN TELEFONE T ON TU.TELEFONE_FONE = T.TEL_ID
WHERE U.USE_ID = 1;

/*ESTE COMANDO DA UM PRINT DAS INFORMAÇÕES LISTAS DE TODOS OS USUARIO

SELECT U.USE_ID, U.USE_NICK, U.USE_SENHA, U.USE_TYPE, U.USE_NOME, U.USE_SOBRENOME, U.USE_DATANASC, 
U.USE_EMAIL, U.USE_CRIA, U.USE_SEXO, U.USE_CPF, E.END_RUA, E.END_NUM, E.END_COMP, E.END_BAIRRO, 
E.END_CIDADE, E.END_UF, E.END_PAIS, E.END_CEP, T.TEL_TIPO, T.TEL_TELEFONE
FROM USUARIO U
LEFT JOIN ENDERECO_USUARIO EU ON U.USE_ID = EU.ENDERECO_USER
LEFT JOIN ENDERECO E ON EU.ENDERECO_CHAVE = E.END_ID
LEFT JOIN TELEFONE_USUARIO TU ON U.USE_ID = TU.TELEFONE_USER
LEFT JOIN TELEFONE T ON TU.TELEFONE_FONE = T.TEL_ID;

ESTE COMANDO DA UM PRINT EM TODAS AS INFORMAÇÕES DO USUARIO ESCOLHIDO. SE TIRAR O WHERE NO FINAL VAI DAR UM PRINT DE TODOS OS USUARIOS
SELECT * FROM USUARIO U
LEFT JOIN ENDERECO_USUARIO EU ON U.USE_ID = EU.ENDERECO_USER
LEFT JOIN ENDERECO E ON EU.ENDERECO_CHAVE = E.END_ID
LEFT JOIN TELEFONE_USUARIO TU ON U.USE_ID = TU.TELEFONE_USER
LEFT JOIN TELEFONE T ON TU.TELEFONE_FONE = T.TEL_ID
WHERE U.USE_ID = 1;
*/
