-- Cria o banco de dados
CREATE DATABASE TESTUSER4;

-- Seleciona o banco de dados
USE TESTUSER4;

-- Criação da tabela TB_USER
CREATE TABLE TB_USER (
  TB_USER_ID INT AUTO_INCREMENT NOT NULL,
  TB_USER_NOME VARCHAR(50) NOT NULL,
  TB_USER_SOBRENOME VARCHAR(50) NOT NULL,
  TB_USER_DATANASC DATE NOT NULL,
  TB_USER_EMAIL VARCHAR(100) NOT NULL,
  TB_USER_SENHA VARCHAR(100) NOT NULL,
  TB_USER_TYPE ENUM('ADMIN', 'FUNCIONARIO', 'CLIENTE') NOT NULL,
  TB_USER_CRIA DATETIME NOT NULL,
  TB_USER_MOD DATETIME NOT NULL,
  TB_USER_STATUS BOOLEAN NOT NULL,
  TB_USER_CEL VARCHAR(15) NOT NULL,
  TB_USER_NICK VARCHAR(30) NOT NULL,
  TB_USER_SEXO ENUM('MASCULINO', 'FEMININO', 'OUTRO') NOT NULL,
  PRIMARY KEY (TB_USER_ID)
);

-- Criação da tabela TB_FUNCIONARIO com FK para TB_USER
CREATE TABLE TB_FUNCIONARIO (
  TB_FUN_ID INT AUTO_INCREMENT NOT NULL,
  TB_USER_ID INT NOT NULL,
  TB_FUN_CARGO VARCHAR(25) NOT NULL,
  TB_FUN_ENTRADA DATE NOT NULL,
  TB_FUN_SAIDA DATE,
  TB_FUN_SALARIO DECIMAL(10, 2) NOT NULL,
  PRIMARY KEY (TB_FUN_ID),
  FOREIGN KEY (TB_USER_ID) REFERENCES TB_USER (TB_USER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Criação da tabela TB_CLIENTE com FK para TB_USER
CREATE TABLE TB_CLIENTE (
  TB_CLI_ID INT AUTO_INCREMENT NOT NULL,
  TB_USER_ID INT NOT NULL,
  PRIMARY KEY (TB_CLI_ID),
  FOREIGN KEY (TB_USER_ID) REFERENCES TB_USER (TB_USER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Criação da tabela TB_ADDRESS com FK para TB_USER
CREATE TABLE TB_ADDRESS (
  TB_ADDRESS_ID INT AUTO_INCREMENT NOT NULL,
  TB_USER_ID INT NOT NULL,
  TB_ADDRESS_RUA VARCHAR(150) NOT NULL,
  TB_ADDRESS_NUM VARCHAR(10) NOT NULL,
  TB_ADDRESS_COMP VARCHAR(50),
  TB_ADDRESS_BAIRRO VARCHAR(100) NOT NULL,
  TB_ADDRESS_CIDADE VARCHAR(100) NOT NULL,
  TB_ADDRESS_UF CHAR(2) NOT NULL,
  TB_ADDRESS_PAIS VARCHAR(50) NOT NULL,
  TB_ADDRESS_CEP VARCHAR(10) NOT NULL,
  PRIMARY KEY (TB_ADDRESS_ID),
  FOREIGN KEY (TB_USER_ID) REFERENCES TB_USER (TB_USER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Criação da tabela PERMISSIONS com FK para TB_USER
CREATE TABLE PERMISSIONS (
  PERMISSION_ID INT AUTO_INCREMENT NOT NULL,
  USER_ID INT NOT NULL,
  RESOURCE_TYPE VARCHAR(50) NOT NULL,
  PERMISSION VARCHAR(255) NOT NULL,
  CREATED_AT DATETIME NOT NULL,
  PRIMARY KEY (PERMISSION_ID),
  FOREIGN KEY (USER_ID) REFERENCES TB_USER (TB_USER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

-- Inserção de dados fictícios em TB_USER e obtenção dos IDs de usuário gerados
INSERT INTO TB_USER (TB_USER_NOME, TB_USER_SOBRENOME, TB_USER_DATANASC, TB_USER_EMAIL, TB_USER_SENHA, TB_USER_TYPE, TB_USER_CRIA, TB_USER_MOD, TB_USER_STATUS, TB_USER_CEL, TB_USER_NICK, TB_USER_SEXO) VALUES
  ('João', 'Silva', '1990-02-14', 'joao@email.com', 'hashed_password1', 'ADMIN', NOW(), NOW(), 1, '11987654321', 'joao123', 'MASCULINO'),
  ('Maria', 'Pereira', '1985-04-20', 'maria@email.com', 'hashed_password2', 'FUNCIONARIO', NOW(), NOW(), 1, '11912345678', 'maria456', 'FEMININO'),
  ('Pedro', 'Fernandes', '1995-08-10', 'pedro@email.com', 'hashed_password3', 'CLIENTE', NOW(), NOW(), 1, '11888887777', 'pedro789', 'OUTRO');

-- Inserção de dados fictícios em TB_FUNCIONARIO (usando IDs de usuário válidos)
INSERT INTO TB_FUNCIONARIO (TB_USER_ID, TB_FUN_CARGO, TB_FUN_ENTRADA, TB_FUN_SAIDA, TB_FUN_SALARIO) VALUES
  (1, 'Gerente', '2022-01-15', NULL, 8000.00),
  (2, 'Analista', '2021-03-10', '2023-06-30', 6000.00);

-- Inserção de dados fictícios em TB_CLIENTE (usando IDs de usuário válidos)
INSERT INTO TB_CLIENTE (TB_USER_ID) VALUES
  (3);

-- Inserção de dados fictícios em TB_ADDRESS (usando IDs de usuário válidos)
INSERT INTO TB_ADDRESS (TB_USER_ID, TB_ADDRESS_RUA, TB_ADDRESS_NUM, TB_ADDRESS_COMP, TB_ADDRESS_BAIRRO, TB_ADDRESS_CIDADE, TB_ADDRESS_UF, TB_ADDRESS_PAIS, TB_ADDRESS_CEP) VALUES
  (1, 'Rua A', '123', 'Apto 4', 'Bairro X', 'Cidade 1', 'SP', 'Brasil', '12345-678'),
  (2, 'Rua B', '456', NULL, 'Bairro Y', 'Cidade 2', 'RJ', 'Brasil', '54321-987');
  
-- Inserção de permissões usando IDs de usuário válidos
INSERT INTO PERMISSIONS (USER_ID, RESOURCE_TYPE, PERMISSION, CREATED_AT)
VALUES
  (1, 'FUNCIONARIO', 'READ, WRITE, DELETE', NOW()),
  (1, 'CLIENTE', 'READ, WRITE, DELETE', NOW());

-- Funcionários têm permissões para CLIENTE
INSERT INTO PERMISSIONS (USER_ID, RESOURCE_TYPE, PERMISSION, CREATED_AT)
VALUES
  (2, 'CLIENTE', 'READ, WRITE', NOW());

-- Clientes têm permissões limitadas
INSERT INTO PERMISSIONS (USER_ID, RESOURCE_TYPE, PERMISSION, CREATED_AT)
VALUES
  (3, 'CLIENTE', 'READ', NOW());
